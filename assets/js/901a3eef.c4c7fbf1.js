"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[4048],{2366:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var t=i(5893),o=i(1151);const s={sidebar_label:"GPU Support",sidebar_position:160,description:"How to enable GPU support on your Bacalhau node."},a="GPU Support",r={id:"running-node/gpu",title:"GPU Support",description:"How to enable GPU support on your Bacalhau node.",source:"@site/docs/running-node/gpu.md",sourceDirName:"running-node",slug:"/running-node/gpu",permalink:"/running-node/gpu",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/running-node/gpu.md",tags:[],version:"current",lastUpdatedAt:1700059613,formattedLastUpdatedAt:"Nov 15, 2023",sidebarPosition:160,frontMatter:{sidebar_label:"GPU Support",sidebar_position:160,description:"How to enable GPU support on your Bacalhau node."},sidebar:"documentationSidebar",previous:{title:"Test Network Locally",permalink:"/running-node/test-network"},next:{title:"Configuring node persistence",permalink:"/running-node/persistence"}},d={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Unofficial GPU Node Setup",id:"unofficial-gpu-node-setup",level:3},{value:"GPU Node Configuration",id:"gpu-node-configuration",level:2},{value:"Adding Global GPU Limits",id:"adding-global-gpu-limits",level:3},{value:"Adding Job GPU Limits",id:"adding-job-gpu-limits",level:3},{value:"Limitations",id:"limitations",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"gpu-support",children:"GPU Support"}),"\n",(0,t.jsx)(n.p,{children:"Bacalhau supports GPUs out of the box and defaults to allowing execution on all GPUs installed on the node."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Bacalhau makes the assumption that you have installed all the necessary NVIDIA drivers on your node. The Bacalhau client requires:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://get.docker.com/",children:"Docker"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html",children:"cuda-drivers for your GPU"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html",children:"NVIDIA Container Toolkit (nvidia-docker2)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user",children:"permission to access Docker"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You can test whether you have a working GPU setup with the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run --rm --gpus all nvidia/cuda:11.0.3-base-ubuntu20.04 nvidia-smi\n"})}),"\n",(0,t.jsx)(n.h3,{id:"unofficial-gpu-node-setup",children:"Unofficial GPU Node Setup"}),"\n",(0,t.jsx)(n.p,{children:"You should review the documented links above for official install instructions. For a quick start, you can use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt-get install -y linux-headers-$(uname -r)\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID | sed -e 's/\\.//g') && wget https://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64/cuda-keyring_1.0-1_all.deb && sudo dpkg -i cuda-keyring_1.0-1_all.deb\nsudo apt-get update && sudo apt-get -y install cuda-drivers\ncurl https://get.docker.com | sh \\\n  && sudo systemctl --now enable docker\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID) \\\n      && curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n      && curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | \\\n            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\n            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID) \\\n      && curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n      && curl -s -L https://nvidia.github.io/libnvidia-container/experimental/$distribution/libnvidia-container.list | \\\n         sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\n         sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\nsudo apt-get update\nsudo apt-get install -y nvidia-docker2\nsudo systemctl restart docker\nsudo groupadd docker && sudo usermod -aG docker $USER && newgrp docker \ndocker run --rm --gpus all nvidia/cuda:11.0.3-base-ubuntu20.04 nvidia-smi\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This was tested on a VM in GCP, in ",(0,t.jsx)(n.code,{children:"europe-west1-b"}),", of type ",(0,t.jsx)(n.code,{children:"n1-highmem-4"}),", with ",(0,t.jsx)(n.code,{children:"1 x NVIDIA Tesla T4"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"gpu-node-configuration",children:"GPU Node Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The following settings refer to the ",(0,t.jsx)(n.code,{children:"bacalhau serve"})," command. To see all settings, please refer to the ",(0,t.jsx)(n.a,{href:"/all-flags",children:"CLI documentation"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"adding-global-gpu-limits",children:"Adding Global GPU Limits"}),"\n",(0,t.jsxs)(n.p,{children:["To limit the number of GPUs that Bacalhau has access to, use the ",(0,t.jsx)(n.code,{children:"limit-total-gpu"})," flag."]}),"\n",(0,t.jsx)(n.h3,{id:"adding-job-gpu-limits",children:"Adding Job GPU Limits"}),"\n",(0,t.jsxs)(n.p,{children:["To limit the number of GPUs that individual jobs can use, use the ",(0,t.jsx)(n.code,{children:"limit-job-gpu"})," flag."]}),"\n",(0,t.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,t.jsxs)(n.p,{children:["For limitations, see ",(0,t.jsx)(n.a,{href:"/next-steps/gpu#limitations",children:"the GPU page in the getting started guide"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>a});var t=i(7294);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);