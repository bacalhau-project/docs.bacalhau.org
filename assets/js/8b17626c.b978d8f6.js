"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[3110],{5378:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=t(5893),a=t(1151);const s={sidebar_label:"Genomics",sidebar_position:3},o="Running Genomics on Bacalhau",r={id:"examples/molecular-dynamics/Genomics/index",title:"Running Genomics on Bacalhau",description:"stars - badge-generator",source:"@site/docs/examples/molecular-dynamics/Genomics/index.md",sourceDirName:"examples/molecular-dynamics/Genomics",slug:"/examples/molecular-dynamics/Genomics/",permalink:"/examples/molecular-dynamics/Genomics/",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/molecular-dynamics/Genomics/index.md",tags:[],version:"current",lastUpdatedAt:1702252086,formattedLastUpdatedAt:"Dec 10, 2023",sidebarPosition:3,frontMatter:{sidebar_label:"Genomics",sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"Coresets On Bacalhau",permalink:"/examples/molecular-dynamics/Coreset/"},next:{title:"Gromacs",permalink:"/examples/molecular-dynamics/Gromacs/"}},c={},l=[{value:"TD;lR",id:"tdlr",level:2},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Containerize your Script using Docker",id:"containerize-your-script-using-docker",level:2},{value:"Build the container",id:"build-the-container",level:3},{value:"Push the container",id:"push-the-container",level:3},{value:"Running a Bacalhau job to Generate Genomics Data",id:"running-a-bacalhau-job-to-generate-genomics-data",level:2},{value:"Checking the State of your Jobs",id:"checking-the-state-of-your-jobs",level:2},{value:"Viewing your Job Output",id:"viewing-your-job-output",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"running-genomics-on-bacalhau",children:"Running Genomics on Bacalhau"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/bacalhau-project/bacalhau",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/stars/bacalhau-project/bacalhau?style=social",alt:"stars - badge-generator"})})}),"\n",(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["Kipoi ",(0,i.jsx)(n.em,{children:"(pronounce: k\xedpi; from the Greek \u03ba\u03ae\u03c0\u03bf\u03b9: gardens)"})," is an API and a repository of ready-to-use trained models for genomics. It currently contains 2201 different models, covering canonical predictive tasks in transcriptional and post-transcriptional gene regulation. Kipoi's API is implemented as a ",(0,i.jsx)(n.a,{href:"https://github.com/kipoi/kipoi",children:"python package"})," and it is also accessible from the command line."]}),"\n",(0,i.jsx)(n.h2,{id:"tdlr",children:"TD;lR"}),"\n",(0,i.jsx)(n.p,{children:"Running genomics model on Bacalhau"}),"\n",(0,i.jsx)(n.h2,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,i.jsxs)(n.p,{children:["To get started, you need to install the Bacalhau client, see more information ",(0,i.jsx)(n.a,{href:"https://docs.bacalhau.org/getting-started/installation",children:"here"})]}),"\n",(0,i.jsx)(n.h2,{id:"containerize-your-script-using-docker",children:"Containerize your Script using Docker"}),"\n",(0,i.jsxs)(n.p,{children:["To run Genomics on Bacalhau we need to set up a Docker container. To do this, you'll need to create a ",(0,i.jsx)(n.code,{children:"Dockerfile"})," and add your desired configuration. The Dockerfile is a text document that contains the commands that specify how the image will be built."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'FROM kipoi/kipoi-veff2:py37\n\nRUN kipoi_veff2_predict ./examples/input/test.vcf ./examples/input/test.fa ./output.tsv -m "DeepSEA/predict" -s "diff" -s "logit"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"build-the-container",children:"Build the container"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"docker build"})," command builds Docker images from a Dockerfile."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"docker build -t <hub-user>/<repo-name>:<tag> .\n"})}),"\n",(0,i.jsx)(n.p,{children:"Before running the command replace;"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"hub-user"})," with your docker hub username, If you don\u2019t have a docker hub account ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/docker-id/",children:"follow these instructions to create a Docker Account"}),", and use the username of the account you created"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"repo-name"})," with the name of the container, you can name it anything you want"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"tag"})," this is not required but you can use the latest tag"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In our case"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker build -t ghcr.io/bacalhau-project/examples/stable-diffusion-gpu:0.0.1 .\n"})}),"\n",(0,i.jsx)(n.h3,{id:"push-the-container",children:"Push the container"}),"\n",(0,i.jsx)(n.p,{children:"Next, upload the image to the registry. This can be done by using the Docker hub username, repo name or tag."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"docker push <hub-user>/<repo-name>:<tag>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-a-bacalhau-job-to-generate-genomics-data",children:"Running a Bacalhau job to Generate Genomics Data"}),"\n",(0,i.jsx)(n.p,{children:"After the repo image has been pushed to Docker Hub, we can now use the container for running on Bacalhau. To submit a job, run the following Bacalhau command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'%%bash --out job_id\nbacalhau docker run \\\n--id-only \\\n--wait \\ \n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\njsacex/kipoi-veff2:py37 \\\n-- kipoi_veff2_predict ./examples/input/test.vcf ./examples/input/test.fa ../outputs/output.tsv -m "DeepSEA/predict" -s "diff" -s "logit"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["When a job is submitted, Bacalhau prints out the related ",(0,i.jsx)(n.code,{children:"job_id"}),". We store that in an environment variable so that we can reuse it later on."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"%env JOB_ID={job_id}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"checking-the-state-of-your-jobs",children:"Checking the State of your Jobs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job status"}),": You can check the status of the job using ",(0,i.jsx)(n.code,{children:"bacalhau list"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau list --id-filter ${JOB_ID} --wide\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When it says ",(0,i.jsx)(n.code,{children:"Completed"}),", that means the job is done, and we can get the results."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job information"}),": You can find out more information about your job by using ",(0,i.jsx)(n.code,{children:"bacalhau describe"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau describe ${JOB_ID}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job download"}),": You can download your job results directly by using ",(0,i.jsx)(n.code,{children:"bacalhau get"}),". Alternatively, you can choose to create a directory to store your results. In the command below, we created a directory and downloaded our job output to be stored in that directory."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"%%bash\nrm -rf results && mkdir -p results\nbacalhau get $JOB_ID --output-dir results\n"})}),"\n",(0,i.jsx)(n.p,{children:"After the download has finished you should see the following contents in the results directory"}),"\n",(0,i.jsx)(n.h2,{id:"viewing-your-job-output",children:"Viewing your Job Output"}),"\n",(0,i.jsx)(n.p,{children:"To view the file, run the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"%%bash\nls results/ # list the contents of the current directory \ncat results/outputs/output.tsv | head -n 10 # display the contents of the current directory \n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var i=t(7294);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);