"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[276],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),s=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(a),u=l,k=c["".concat(o,".").concat(u)]||c[u]||d[u]||r;return a?n.createElement(k,i(i({ref:t},m),{},{components:a})):n.createElement(k,i({ref:t},m))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[c]="string"==typeof e?e:l,i[1]=p;for(var s=2;s<r;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6577:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_label:"list"},i="Command: job list",p={unversionedId:"references/cli/job/list/index",id:"references/cli/job/list/index",title:"Command: job list",description:"Description",source:"@site/docs/references/cli/job/list/index.md",sourceDirName:"references/cli/job/list",slug:"/references/cli/job/list/",permalink:"/references/cli/job/list/",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/cli/job/list/index.md",tags:[],version:"current",lastUpdatedAt:1695631674,formattedLastUpdatedAt:"Sep 25, 2023",frontMatter:{sidebar_label:"list"},sidebar:"documentationSidebar",previous:{title:"history",permalink:"/references/cli/job/history/"},next:{title:"logs",permalink:"/references/cli/job/logs/"}},o={},s=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Flags",id:"flags",level:2},{value:"Global Flags",id:"global-flags",level:2},{value:"Examples",id:"examples",level:2}],m={toc:s},c="wrapper";function d(e){let{components:t,...a}=e;return(0,l.kt)(c,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"command-job-list"},"Command: ",(0,l.kt)("inlineCode",{parentName:"h1"},"job list")),(0,l.kt)("h2",{id:"description"},"Description"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"bacalhau job list")," command provides a listing of all submitted jobs. This command offers an overview of all tasks and processes registered in the system, allowing users to monitor and manage their jobs effectively."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"bacalhau job list [flags]\n")),(0,l.kt)("h2",{id:"flags"},"Flags"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"-h"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--help"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Display help for the ",(0,l.kt)("inlineCode",{parentName:"li"},"list")," command."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--hide-header"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Opts out of printing the column headers in the results."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--labels string"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Filters jobs by labels. It's designed to function similar to Kubernetes label selectors."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"bacalhau_canary != true")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--limit uint32"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Limits the number of results returned."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"10")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--next-token string"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Uses the provided token for pagination."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--no-style"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Strips all styling from the table output."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--order-by string"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Organizes results based on a chosen field. Valid fields are ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"created_at"),"."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--order-reversed"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Reverses the order of the displayed results."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--output format"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Dictates the desired output format for the command. Options are ",(0,l.kt)("inlineCode",{parentName:"li"},"table"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"csv"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"json"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"yaml"),"."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"table")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--pretty"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Offers a more visually pleasing output for ",(0,l.kt)("inlineCode",{parentName:"li"},"json")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"yaml")," formats."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--wide"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Presents full values in the table results, preventing truncation.")))),(0,l.kt)("h2",{id:"global-flags"},"Global Flags"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--api-host string"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Defines the host for client-server communication via REST. Overridden by the ",(0,l.kt)("inlineCode",{parentName:"li"},"BACALHAU_API_HOST")," environment variable, if set."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"bootstrap.production.bacalhau.org")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--api-port int"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Sets the port for RESTful communication between the client and server. The ",(0,l.kt)("inlineCode",{parentName:"li"},"BACALHAU_API_PORT")," environment variable takes precedence if set."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"1234")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--log-mode logging-mode"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Designates the desired log format. Options include ",(0,l.kt)("inlineCode",{parentName:"li"},"default"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"station"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"combined"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"event"),"."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"default")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--repo string"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: Points to the bacalhau repository location."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"$HOME/.bacalhau"))))),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"List all jobs"),":"),(0,l.kt)("p",{parentName:"li"},"Execute the command to list all the jobs:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau job list\n")),(0,l.kt)("p",{parentName:"li"},"Expected output:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},"CREATED   ID          JOB     TYPE   STATE\n08:19:07  d78a4cb4    docker  batch  Completed\n04:17:21  e45f31a7    docker  batch  Completed\n04:53:50  f4993f62    docker  batch  Completed\n... (trimmed for brevity) ...\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Limit the list to the last two jobs"),":"),(0,l.kt)("p",{parentName:"li"},"Limit the list to display only the last two jobs:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau job list --limit 2\n")),(0,l.kt)("p",{parentName:"li"},"Expected output:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},"CREATED   ID          JOB     TYPE   STATE\n03:14:16  19a26187    docker  batch  Completed\n21:47:21  2a53a13b    docker  batch  Completed\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Order the list by creation date in descending order"),":"),(0,l.kt)("p",{parentName:"li"},"Order the jobs by their creation date in a descending manner:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau job list --order-by created_at --order-reversed\n")),(0,l.kt)("p",{parentName:"li"},"Expected output:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},"CREATED   ID          JOB     TYPE   STATE\n17:44:16  90e14efd    docker  batch  Completed\n17:44:08  8204570c    docker  batch  Completed\n17:43:50  f196521d    docker  batch  Completed\n... (trimmed for brevity) ...\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Filter the jobs by specific labels"),":"),(0,l.kt)("p",{parentName:"li"},"Display jobs that have specific labels:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'bacalhau job list --labels "region in (us-east-1, us-east-2),env = prod"\n')),(0,l.kt)("p",{parentName:"li"},"Expected output:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},"... (filtered jobs) ...\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Display the list in JSON format with pretty printing"),":"),(0,l.kt)("p",{parentName:"li"},"Get a limited list of jobs in a formatted JSON output:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau job list --limit 3 --output json --pretty\n")),(0,l.kt)("p",{parentName:"li"},"Expected output:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},"... [The JSON formatted output] ...\n")))))}d.isMDXComponent=!0}}]);