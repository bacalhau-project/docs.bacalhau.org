"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[7419],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(a),m=o,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8403:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var n=a(7462),o=(a(7294),a(3905));const r={sidebar_label:"From A URL",sidebar_position:1},i="Copy Data from a URL to Filecoin",l={unversionedId:"examples/data-ingestion/from-url/index",id:"examples/data-ingestion/from-url/index",title:"Copy Data from a URL to Filecoin",description:"Open In Colab",source:"@site/docs/examples/data-ingestion/from-url/index.md",sourceDirName:"examples/data-ingestion/from-url",slug:"/examples/data-ingestion/from-url/",permalink:"/examples/data-ingestion/from-url/",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/data-ingestion/from-url/index.md",tags:[],version:"current",lastUpdatedAt:1676283943,formattedLastUpdatedAt:"Feb 13, 2023",sidebarPosition:1,frontMatter:{sidebar_label:"From A URL",sidebar_position:1},sidebar:"documentationSidebar",previous:{title:"Data Ingestion",permalink:"/examples/data-ingestion/"},next:{title:"Pinning to Filecoin",permalink:"/examples/data-ingestion/pinning/"}},s={},u=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"1. Uploading A File From a URL",id:"1-uploading-a-file-from-a-url",level:2},{value:"2. Get the CID From the Completed Job",id:"2-get-the-cid-from-the-completed-job",level:2},{value:"3. Use the CID in a New Bacalhau Job",id:"3-use-the-cid-in-a-new-bacalhau-job",level:2}],p={toc:u};function c(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"copy-data-from-a-url-to-filecoin"},"Copy Data from a URL to Filecoin"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://colab.research.google.com/github/bacalhau-project/examples/blob/main/data-ingestion/from-url/index.ipynb"},(0,o.kt)("img",{parentName:"a",src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://mybinder.org/v2/gh/bacalhau-project/examples/HEAD?labpath=data-ingestion/from-url/index.ipynb"},(0,o.kt)("img",{parentName:"a",src:"https://mybinder.org/badge.svg",alt:"Open In Binder"}))),(0,o.kt)("p",null,"The goal of the Bacalhau project is to make it easy to perform distributed, decentralised computation next to where the data resides. So a key step in this process is making your data accessible."),(0,o.kt)("p",null,"IPFS is a set of protocols that allow data to be discovered and accessed in a decentralised way. Data is identified by its content identifier (CID) and can be accessed by anyone who knows the CID."),(0,o.kt)("p",null,"This notebook shows how to use Bacalhau to copy data from a URL to Filecoin and expose on IPFS for use with Bacalhau."),(0,o.kt)("p",null,"This takes advantage of the fact that all Bacalhau jobs are published to a Filecoin contract via Estuary. All data that is located in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/outputs")," directory is published."),(0,o.kt)("p",null,"The example below uses a simple tool we have created to help make it easier to move data in Bacalhau."),(0,o.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.bacalhau.org/getting-started/installation"},"The Bacalhau client")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stedolan.github.io/jq/download/"},(0,o.kt)("inlineCode",{parentName:"a"},"jq")," to parse the Bacalhau output"))),(0,o.kt)("h2",{id:"1-uploading-a-file-from-a-url"},"1. Uploading A File From a URL"),(0,o.kt)("p",null,"To upload a file from a URL we will take advantage of the ",(0,o.kt)("inlineCode",{parentName:"p"},"--input-urls")," parameter of the ",(0,o.kt)("inlineCode",{parentName:"p"},"bacalhau docker run")," command. This will download a file from a public URL and place it in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/inputs")," directory of the container (by default)."),(0,o.kt)("p",null,"Then we will use a helper container to move that data to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/outputs")," directory so that it is published to Filecoin via Estuary."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can find out more about the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bacalhau-project/examples/tree/main/tools/upload"},"helper container in the examples repository"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau docker run \\\n    --id-only \\\n    --wait \\\n    --input-urls=https://raw.githubusercontent.com/filecoin-project/bacalhau/main/README.md \\\n    ghcr.io/bacalhau-project/examples/upload:v1\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"env: JOB_ID=418f5335-8023-42ca-b65f-7844614151f0\n")),(0,o.kt)("p",null,"Just to be safe, double check that the job succeeded by running the describe command (and some ",(0,o.kt)("inlineCode",{parentName:"p"},"jq")," to parse it)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau list $JOB_ID --output=json | jq '.[0].Status.JobState.Nodes[] | .Shards.\"0\" | select(.RunOutput)'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "NodeId": "QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL",\n  "State": "Completed",\n  "VerificationResult": {\n    "Complete": true,\n    "Result": true\n  },\n  "PublishedResults": {\n    "StorageSource": "IPFS",\n    "Name": "job-418f5335-8023-42ca-b65f-7844614151f0-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL",\n    "CID": "QmYT1RuLmhqh6xdXLG62kLjn2G513nHiWmuy6j6vm5QT5H"\n  },\n  "RunOutput": {\n    "stdout": "1:45PM INF Copying files InputPath=/inputs OutputPath=/outputs\\n1:45PM INF Copying object dst=/outputs/README.md src=/inputs/README.md\\n1:45PM INF Done copying all objects files=[\\"/outputs\\",\\"/outputs/README.md\\"]\\n",\n    "stdouttruncated": false,\n    "stderr": "",\n    "stderrtruncated": false,\n    "exitCode": 0,\n    "runnerError": ""\n  }\n}\n')),(0,o.kt)("h2",{id:"2-get-the-cid-from-the-completed-job"},"2. Get the CID From the Completed Job"),(0,o.kt)("p",null,"The job will upload the CID to the Filecoin network via Estuary. Let's get the CID from the output."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau list $JOB_ID --output=json | jq -r '.[0].Status.JobState.Nodes[] | .Shards.\"0\".PublishedResults | select(.CID) | .CID'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"env: CID=QmYT1RuLmhqh6xdXLG62kLjn2G513nHiWmuy6j6vm5QT5H\n")),(0,o.kt)("p",null,"Your CID is ",(0,o.kt)("b",null,"QmYT1RuLmhqh6xdXLG62kLjn2G513nHiWmuy6j6vm5QT5H\n."),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("a",{href:"https://ipfs.io/ipfs/QmYT1RuLmhqh6xdXLG62kLjn2G513nHiWmuy6j6vm5QT5H\n"},(0,o.kt)("button",null,"View files on ipfs.io"))),(0,o.kt)("h2",{id:"3-use-the-cid-in-a-new-bacalhau-job"},"3. Use the CID in a New Bacalhau Job"),(0,o.kt)("p",null,"Now that we have the CID, we can use it in a new job. This time we will use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--inputs")," parameter to tell Bacalhau to use the CID we just uploaded."),(0,o.kt)("p",null,'In this case my "job" is just to list the contents of the ',(0,o.kt)("inlineCode",{parentName:"p"},"/inputs"),' directory and cat the file we downloaded in the first step. You can see that the "input" data is located under ',(0,o.kt)("inlineCode",{parentName:"p"},"/inputs/outputs/README.md"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'bacalhau docker run \\\n    --id-only \\\n    --wait \\\n    --inputs=$CID \\\n    ubuntu -- \\\n    bash -c "set -x; ls -l /inputs; ls -l /inputs/outputs; cat /inputs/outputs/README.md"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"env: JOB_ID=37e3c424-072a-4ea5-bc3a-76909dce17ee\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf results && mkdir ./results\nbacalhau get --output-dir ./results $JOB_ID \n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Fetching results of job '37e3c424-072a-4ea5-bc3a-76909dce17ee'...\nResults for job '37e3c424-072a-4ea5-bc3a-76909dce17ee' have been written to...\n./results\n\n\n2023/01/12 13:45:45 CleanupManager.fnsMutex violation CRITICAL section took 22.714ms 22714000 (threshold 10ms)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"head -n 15 ./results/combined_results/stdout\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'total 12\n-rw-r--r-- 1 root root    1 Jan 12 13:45 exitCode\ndrwxr-xr-x 2 root root 4096 Jan 12 13:45 outputs\n-rw-r--r-- 1 root root    0 Jan 12 13:45 stderr\n-rw-r--r-- 1 root root  210 Jan 12 13:45 stdout\ntotal 4\n-rw-r--r-- 1 root root 3802 Jan 12 13:45 README.md\n\x3c!-- commenting out until we can fix the image logo [![CircleCI](https://dl.circleci.com/status-badge/img/null/filecoin-project/bacalhau/tree/main.svg?style=svg)](https://dl.circleci.com/status-badge/redirect/null/filecoin-project/bacalhau/tree/main)\n--\x3e\n# The Filecoin Distributed Computation Framework  \n<p align="center">\n  <img src="docs/images/bacalhau-fish.jpg" alt="Bacalhau Logo" width="400" />\n</p>\n<p align=center>\n  Compute Over Data == CoD\n')))}c.isMDXComponent=!0}}]);