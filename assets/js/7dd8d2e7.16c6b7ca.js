"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[6627],{8699:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=t(5893),r=t(1151);const o={sidebar_label:"Sparkov Data Generation",sidebar_position:11},i="Generate Synthetic Data using Sparkov Data Generation technique",s={id:"examples/workload-onboarding/Sparkov-Data-Generation/index",title:"Generate Synthetic Data using Sparkov Data Generation technique",description:"stars - badge-generator",source:"@site/docs/examples/workload-onboarding/Sparkov-Data-Generation/index.md",sourceDirName:"examples/workload-onboarding/Sparkov-Data-Generation",slug:"/examples/workload-onboarding/Sparkov-Data-Generation/",permalink:"/examples/workload-onboarding/Sparkov-Data-Generation/",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/workload-onboarding/Sparkov-Data-Generation/index.md",tags:[],version:"current",lastUpdatedAt:1702058642,formattedLastUpdatedAt:"Dec 8, 2023",sidebarPosition:11,frontMatter:{sidebar_label:"Sparkov Data Generation",sidebar_position:11},sidebar:"documentationSidebar",previous:{title:"Rust WASM",permalink:"/examples/workload-onboarding/rust-wasm/"},next:{title:"Custom Containers",permalink:"/examples/workload-onboarding/custom-containers/"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"TD;LR",id:"tdlr",level:2},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Running Sparkov Locally\u200b",id:"running-sparkov-locally",level:2},{value:"Running the script",id:"running-the-script",level:2},{value:"Containerize Script using Docker",id:"containerize-script-using-docker",level:2},{value:"Build the container",id:"build-the-container",level:3},{value:"Push the container",id:"push-the-container",level:3},{value:"Running a Bacalhau Job",id:"running-a-bacalhau-job",level:2},{value:"Structure of the command",id:"structure-of-the-command",level:3},{value:"Checking the State of your Jobs",id:"checking-the-state-of-your-jobs",level:2},{value:"Viewing your Job Output",id:"viewing-your-job-output",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"generate-synthetic-data-using-sparkov-data-generation-technique",children:"Generate Synthetic Data using Sparkov Data Generation technique"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/bacalhau-project/bacalhau",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/github/stars/bacalhau-project/bacalhau?style=social",alt:"stars - badge-generator"})})}),"\n",(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsx)(n.p,{children:"A synthetic dataset is generated by algorithms or simulations which has similar characteristics to real-world data. Collecting real-world data, especially data that contains sensitive user data like credit card information, is not possible due to security and privacy concerns. If a data scientist needs to train a model to detect credit fraud they can use synthetically generated data instead of using real data without compromising the privacy of users."}),"\n",(0,a.jsx)(n.p,{children:"The advantage of using Bacalhau is that you can generate terabytes of synthetic data without having to install any dependencies or store the data locally."}),"\n",(0,a.jsx)(n.p,{children:"In this example, we will generate synthetic credit card transaction data using the Sparkov program and store the results in IPFS."}),"\n",(0,a.jsx)(n.h2,{id:"tdlr",children:"TD;LR"}),"\n",(0,a.jsx)(n.p,{children:"Run Bacalhau on a synthetic dataset."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,a.jsxs)(n.p,{children:["To get started, you need to install the Bacalhau client, see more information ",(0,a.jsx)(n.a,{href:"https://docs.bacalhau.org/getting-started/installation",children:"here"})]}),"\n",(0,a.jsx)(n.h2,{id:"running-sparkov-locally",children:"Running Sparkov Locally\u200b"}),"\n",(0,a.jsx)(n.p,{children:"To run Sparkov locally, you'll need to clone the repo and install dependencies."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"%%bash\ngit clone https://github.com/js-ts/Sparkov_Data_Generation/\npip3 install -r Sparkov_Data_Generation/requirements.txt\n"})}),"\n",(0,a.jsx)(n.p,{children:"Go to the Sparkov_Data_Generation directory"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"%cd Sparkov_Data_Generation\n"})}),"\n",(0,a.jsx)(n.p,{children:"Creating a temporary directory to store the outputs"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"%%bash\nmkdir ../outputs\n"})}),"\n",(0,a.jsx)(n.h2,{id:"running-the-script",children:"Running the script"}),"\n",(0,a.jsx)(n.p,{children:"After the repo image has been pushed to Docker Hub, we can now use the container for running on Bacalhau. To submit a job, run the following Bacalhau command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'%%bash\npython3 datagen.py -n 1000 -o ../outputs "01-01-2022" "10-01-2022"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Below are some of the parameters you need before running the script"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"-n"}),":  Number of customers to generate"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"-o"}),": path to store the outputs"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Start date"}),': "01-01-2022"']}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"End date"}),': "10-01-2022"']}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To see the full list of options, use:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"%%bash\npython datagen.py -h\n"})}),"\n",(0,a.jsx)(n.h2,{id:"containerize-script-using-docker",children:"Containerize Script using Docker"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"You can skip this entirely and directly go to running on Bacalhau."})}),"\n",(0,a.jsx)(n.p,{children:"If you want any additional dependencies to be installed along with DuckDB, you need to build your own container."}),"\n",(0,a.jsxs)(n.p,{children:["To build your own docker container, create a ",(0,a.jsx)(n.code,{children:"Dockerfile"}),", which contains instructions to build your DuckDB docker container."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"FROM python:3.8\n\nRUN apt update && apt install git\n\nRUN git clone https://github.com/js-ts/Sparkov_Data_Generation/\n\nWORKDIR /Sparkov_Data_Generation/\n\nRUN pip3 install -r requirements.txt\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["See more information on how to containerize your script/app ",(0,a.jsx)(n.a,{href:"https://docs.docker.com/get-started/02_our_app/",children:"here"})]})}),"\n",(0,a.jsx)(n.h3,{id:"build-the-container",children:"Build the container"}),"\n",(0,a.jsxs)(n.p,{children:["We will run ",(0,a.jsx)(n.code,{children:"docker build"})," command to build the container;"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"docker build -t <hub-user>/<repo-name>:<tag> .\n"})}),"\n",(0,a.jsx)(n.p,{children:"Before running the command replace;"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"hub-user"})," with your docker hub username, If you don\u2019t have a docker hub account ",(0,a.jsx)(n.a,{href:"https://docs.docker.com/docker-id/",children:"follow these instructions to create Docker account"}),", and use the username of the account you created"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"repo-name"})," with the name of the container, you can name it anything you want"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"tag"})," this is not required but you can use the latest tag"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"In our case:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"docker build -t jsacex/sparkov-data-generation\n"})}),"\n",(0,a.jsx)(n.h3,{id:"push-the-container",children:"Push the container"}),"\n",(0,a.jsx)(n.p,{children:"Next, upload the image to the registry. This can be done by using the Docker hub username, repo name or tag."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"docker push <hub-user>/<repo-name>:<tag>\n"})}),"\n",(0,a.jsx)(n.p,{children:"In our case:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"docker push jsacex/sparkov-data-generation\n"})}),"\n",(0,a.jsx)(n.p,{children:"After the repo image has been pushed to Docker Hub, we can now use the container for running on Bacalhau"}),"\n",(0,a.jsx)(n.h2,{id:"running-a-bacalhau-job",children:"Running a Bacalhau Job"}),"\n",(0,a.jsx)(n.p,{children:"Now we're ready to run a Bacalhau job. This code runs a job, downloads the results, and prints the stdout."}),"\n",(0,a.jsx)(n.p,{children:"Copy and paste the following code to your terminal"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'%%bash --out job_id\nbacalhau docker run \\\n--id-only \\\n--wait \\\njsacex/sparkov-data-generation \\\n--  python3 datagen.py -n 1000 -o ../outputs "01-01-2022" "10-01-2022"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"structure-of-the-command",children:"Structure of the command"}),"\n",(0,a.jsx)(n.p,{children:"Let's look closely at the command above:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"bacalhau docker run"}),": call to bacalhau"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"jsacex/sparkov-data-generation"}),": the name and the tag of the docker image we are using"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:'-o ../outputs "01-01-2022" "10-01-2022'}),":  path to store the outputs, start date and end-date."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"python3 datagen.py -n 1000"}),": execute Sparktov"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["When a job is submitted, Bacalhau prints out the related ",(0,a.jsx)(n.code,{children:"job_id"}),". We store that in an environment variable so that we can reuse it later on."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"%env JOB_ID={job_id}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"checking-the-state-of-your-jobs",children:"Checking the State of your Jobs"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Job status"}),": You can check the status of the job using ",(0,a.jsx)(n.code,{children:"bacalhau list"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau list --id-filter ${JOB_ID}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["When it says ",(0,a.jsx)(n.code,{children:"Completed"}),", that means the job is done, and we can get the results."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Job information"}),": You can find out more information about your job by using ",(0,a.jsx)(n.code,{children:"bacalhau describe"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau describe ${JOB_ID}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Job download"}),": You can download your job results directly by using ",(0,a.jsx)(n.code,{children:"bacalhau get"}),". Alternatively, you can choose to create a directory to store your results. In the command below, we created a directory and downloaded our job output to be stored in that directory."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"%%bash\nrm -rf results && mkdir -p results\nbacalhau get $JOB_ID --output-dir results\n"})}),"\n",(0,a.jsx)(n.p,{children:"After the download has finished you should see the following contents in the results directory"}),"\n",(0,a.jsx)(n.h2,{id:"viewing-your-job-output",children:"Viewing your Job Output"}),"\n",(0,a.jsx)(n.p,{children:"To view the file, run the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"%%bash\nls results/outputs # list the contents of the current directory \n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>i});var a=t(7294);const r={},o=a.createContext(r);function i(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);