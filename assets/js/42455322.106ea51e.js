"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[475],{9683:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var n=t(5893),i=t(1151);const s={sidebar_label:"Meta"},r="Meta Specification",c={id:"references/job-specification/meta",title:"Meta Specification",description:"In both the Job and Task specifications within Bacalhau, the Meta block is a versatile element used to attach arbitrary metadata. This metadata isn't utilized for filtering or categorizing jobs; there's a separate Labels block specifically designated for that purpose. Instead, the Meta block is instrumental for embedding additional information for operators or external systems, enhancing clarity and context.",source:"@site/docs/references/job-specification/meta.md",sourceDirName:"references/job-specification",slug:"/references/job-specification/meta",permalink:"/references/job-specification/meta",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/job-specification/meta.md",tags:[],version:"current",lastUpdatedAt:1702309452,formattedLastUpdatedAt:"Dec 11, 2023",frontMatter:{sidebar_label:"Meta"},sidebar:"documentationSidebar",previous:{title:"Label",permalink:"/references/job-specification/label"},next:{title:"Network",permalink:"/references/job-specification/network"}},o={},d=[{value:"<code>Meta</code> Parameters in Job and Task Specs",id:"meta-parameters-in-job-and-task-specs",level:2},{value:"User-Defined Metadata",id:"user-defined-metadata",level:3},{value:"Example:",id:"example",level:4},{value:"Auto-Generated Metadata by Bacalhau",id:"auto-generated-metadata-by-bacalhau",level:2},{value:"Bacalhau Auto-Generated Keys:",id:"bacalhau-auto-generated-keys",level:3},{value:"Example:",id:"example-1",level:4},{value:"Implications and Utility",id:"implications-and-utility",level:3}];function l(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"meta-specification",children:"Meta Specification"}),"\n",(0,n.jsxs)(a.p,{children:["In both the ",(0,n.jsx)(a.code,{children:"Job"})," and ",(0,n.jsx)(a.code,{children:"Task"})," specifications within Bacalhau, the ",(0,n.jsx)(a.code,{children:"Meta"})," block is a versatile element used to attach arbitrary metadata. This metadata isn't utilized for filtering or categorizing jobs; there's a separate ",(0,n.jsx)(a.a,{href:"./label",children:(0,n.jsx)(a.code,{children:"Labels"})})," block specifically designated for that purpose. Instead, the ",(0,n.jsx)(a.code,{children:"Meta"})," block is instrumental for embedding additional information for operators or external systems, enhancing clarity and context."]}),"\n",(0,n.jsxs)(a.h2,{id:"meta-parameters-in-job-and-task-specs",children:[(0,n.jsx)(a.code,{children:"Meta"})," Parameters in Job and Task Specs"]}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"Meta"})," block is comprised of key-value pairs, with both keys and values being strings. These pairs aren't constrained by a predefined structure, offering flexibility for users to annotate jobs and tasks with diverse metadata."]}),"\n",(0,n.jsx)(a.h3,{id:"user-defined-metadata",children:"User-Defined Metadata"}),"\n",(0,n.jsx)(a.p,{children:"Users can incorporate any arbitrary key-value pairs to convey descriptive information or context about the job or task."}),"\n",(0,n.jsx)(a.h4,{id:"example",children:"Example:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-json",children:'"Meta": {\n    "project": "frontend",\n    "version": "1.2.5",\n    "owner": "team-alpha",\n    "environment": "development"\n}\n'})}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"project"}),": Identifies the associated project."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"version"}),": Specifies the version of the application or service."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"owner"}),": Names the responsible team or individual."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"environment"}),": Indicates the stage in the development lifecycle."]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"auto-generated-metadata-by-bacalhau",children:"Auto-Generated Metadata by Bacalhau"}),"\n",(0,n.jsx)(a.p,{children:"Beyond user-defined metadata, Bacalhau automatically injects specific metadata keys for identification and security purposes."}),"\n",(0,n.jsx)(a.h3,{id:"bacalhau-auto-generated-keys",children:"Bacalhau Auto-Generated Keys:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"bacalhau.org/requester.id"}),": A unique identifier for the orchestrator that handled the job."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"bacalhau.org/requester.publicKey"}),": The public key of the requester, aiding in security and validation."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"bacalhau.org/client.id"}),": The ID for the client submitting the job, enhancing traceability."]}),"\n"]}),"\n",(0,n.jsx)(a.h4,{id:"example-1",children:"Example:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-json",children:'"Meta": {\n    "bacalhau.org/requester.id": "QmfZwnVWYjHSchAVxJqXn18Bvd1cpG2ATRYceBBvUGZf2f",\n    "bacalhau.org/requester.publicKey": "CAASpgIwggEiMA0GCSqG...BcyEhfEZKnAgMBAAE=",\n    "bacalhau.org/client.id": "dfadea67ab6d8c65761c3d879119e11f157923036f945d969d19a51066dc663a"\n}\n'})}),"\n",(0,n.jsx)(a.h3,{id:"implications-and-utility",children:"Implications and Utility"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Identification"}),": The metadata aids in uniquely identifying jobs and tasks, connecting them to their originators and executors."]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Context Enhancement"}),": Metadata can supplement jobs and tasks with additional data, offering insights and context that aren't captured by standard parameters."]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Security Enhancement"}),": Auto-generated keys like the requester's public key contribute to the secure handling and execution of jobs and tasks."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["While the ",(0,n.jsx)(a.code,{children:"Meta"})," block is distinct from the ",(0,n.jsx)(a.a,{href:"./label",children:(0,n.jsx)(a.code,{children:"Labels"})})," block used for filtering, its contribution to providing context, security, and traceability is integral in managing and understanding the diverse jobs and tasks within the Bacalhau ecosystem effectively."]})]})}function h(e={}){const{wrapper:a}={...(0,i.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,a,t)=>{t.d(a,{Z:()=>c,a:()=>r});var n=t(7294);const i={},s=n.createContext(i);function r(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);