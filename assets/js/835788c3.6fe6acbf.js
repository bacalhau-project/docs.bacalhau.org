"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[4236],{9290:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=a(5893),t=a(1151);const i={sidebar_label:"DuckDB",sidebar_position:3},r="Using Bacalhau with DuckDB",o={id:"examples/data-engineering/DuckDB/index",title:"Using Bacalhau with DuckDB",description:"stars - badge-generator",source:"@site/docs/examples/data-engineering/DuckDB/index.md",sourceDirName:"examples/data-engineering/DuckDB",slug:"/examples/data-engineering/DuckDB/",permalink:"/examples/data-engineering/DuckDB/",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/data-engineering/DuckDB/index.md",tags:[],version:"current",lastUpdatedAt:1701787127,formattedLastUpdatedAt:"Dec 5, 2023",sidebarPosition:3,frontMatter:{sidebar_label:"DuckDB",sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"csv-to-avro-or-parquet",permalink:"/examples/data-engineering/csv-to-avro-or-parquet/"},next:{title:"Simple Image Processing",permalink:"/examples/data-engineering/image-processing/"}},c={},d=[{value:"TD;lR",id:"tdlr",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Containerize Script using Docker",id:"containerize-script-using-docker",level:2},{value:"Build the container",id:"build-the-container",level:3},{value:"Push the container",id:"push-the-container",level:3},{value:"Running a Bacalhau Job",id:"running-a-bacalhau-job",level:2},{value:"Structure of the command",id:"structure-of-the-command",level:3},{value:"Checking the State of your Jobs",id:"checking-the-state-of-your-jobs",level:2},{value:"Viewing your Job Output",id:"viewing-your-job-output",level:2},{value:"Running Arbitrary SQL commands",id:"running-arbitrary-sql-commands",level:2},{value:"Structure of the command",id:"structure-of-the-command-1",level:3},{value:"Viewing your Job Output",id:"viewing-your-job-output-1",level:2},{value:"Need Support?",id:"need-support",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"using-bacalhau-with-duckdb",children:"Using Bacalhau with DuckDB"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/bacalhau-project/bacalhau",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/github/stars/bacalhau-project/bacalhau?style=social",alt:"stars - badge-generator"})})}),"\n",(0,s.jsx)(n.p,{children:"DuckDB is a relational table-oriented database management system that supports SQL queries for producing analytical results. It also comes with various features that are useful for data analytics."}),"\n",(0,s.jsx)(n.p,{children:"DuckDB is suited for the following use cases:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Processing and storing tabular datasets, e.g. from CSV or Parquet files"}),"\n",(0,s.jsx)(n.li,{children:"Interactive data analysis, e.g. Joining & aggregate multiple large tables"}),"\n",(0,s.jsx)(n.li,{children:"Concurrent large changes, to multiple large tables, e.g. appending rows, adding/removing/updating columns"}),"\n",(0,s.jsx)(n.li,{children:"Large result set transfer to client"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In this example tutorial, we will show how to use DuckDB with Bacalhau. The advantage of using DuckDB with Bacalhau is that you don\u2019t need to install, and there is no need to download the datasets since the datasets are\nalready there on IPFS or on the web."}),"\n",(0,s.jsx)(n.h2,{id:"tdlr",children:"TD;lR"}),"\n",(0,s.jsx)(n.p,{children:"Running a relational database(DUCKDB) on Bacalhau"}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["To get started, you need to install the Bacalhau client, see more information ",(0,s.jsx)(n.a,{href:"https://docs.bacalhau.org/getting-started/installation",children:"here"})]}),"\n",(0,s.jsx)(n.h2,{id:"containerize-script-using-docker",children:"Containerize Script using Docker"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"You can skip this entirely and directly go to running on Bacalhau."})}),"\n",(0,s.jsx)(n.p,{children:"If you want any additional dependencies to be installed along with DuckDB, you need to build your own container."}),"\n",(0,s.jsxs)(n.p,{children:["To build your own docker container, create a ",(0,s.jsx)(n.code,{children:"Dockerfile"}),", which contains instructions to build your DuckDB docker container."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"FROM mcr.microsoft.com/vscode/devcontainers/python:3.9\n\nRUN apt-get update && apt-get install -y nodejs npm g++\n\n# Install dbt\nRUN pip3 --disable-pip-version-check --no-cache-dir install duckdb==0.4.0 dbt-duckdb==1.1.4 \\\n    && rm -rf /tmp/pip-tmp\n\n# Install duckdb cli\nRUN wget https://github.com/duckdb/duckdb/releases/download/v0.4.0/duckdb_cli-linux-amd64.zip \\\n    && unzip duckdb_cli-linux-amd64.zip -d /usr/local/bin \\\n    && rm duckdb_cli-linux-amd64.zip\n\n# Configure Workspace\nENV DBT_PROFILES_DIR=/workspaces/datadex\nWORKDIR /workspaces/datadex\n\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["See more information on how to containerize your script/app ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/get-started/02_our_app/",children:"here"})]})}),"\n",(0,s.jsx)(n.h3,{id:"build-the-container",children:"Build the container"}),"\n",(0,s.jsxs)(n.p,{children:["We will run ",(0,s.jsx)(n.code,{children:"docker build"})," command to build the container;"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker build -t <hub-user>/<repo-name>:<tag> .\n"})}),"\n",(0,s.jsx)(n.p,{children:"Before running the command replace;"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"hub-user"})," with your docker hub username, If you don\u2019t have a docker hub account ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/docker-id/",children:"follow these instructions to create docker account"}),", and use the username of the account you created"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"repo-name"})," with the name of the container, you can name it anything you want"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"tag"})," this is not required but you can use the latest tag"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In our case"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t davidgasquez/datadex:v0.2.0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"push-the-container",children:"Push the container"}),"\n",(0,s.jsx)(n.p,{children:"Next, upload the image to the registry. This can be done by using the Docker hub username, repo name or tag."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker push <hub-user>/<repo-name>:<tag>\n"})}),"\n",(0,s.jsx)(n.p,{children:"In our case"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker push davidgasquez/datadex:v0.2.0\n"})}),"\n",(0,s.jsx)(n.h2,{id:"running-a-bacalhau-job",children:"Running a Bacalhau Job"}),"\n",(0,s.jsx)(n.p,{children:"After the repo image has been pushed to Docker Hub, we can now use the container for running on Bacalhau. To submit a job, run the following Bacalhau command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash --out job_id\nbacalhau docker run \\\n--workdir /inputs/ \\\n--wait \\\n--id-only \\\ndavidgasquez/datadex:v0.2.0 -- /bin/bash -c 'duckdb -s \"select 1\"'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"structure-of-the-command",children:"Structure of the command"}),"\n",(0,s.jsx)(n.p,{children:"Let's look closely at the command above:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"bacalhau docker run"}),": call to bacalhau"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"davidgasquez/datadex:v0.2.0 "}),": the name and the tag of the docker image we are using"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"/inputs/"}),": path to input dataset"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"'duckdb -s \"select 1\"'"}),": execute DuckDB"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When a job is submitted, Bacalhau prints out the related ",(0,s.jsx)(n.code,{children:"job_id"}),". We store that in an environment variable so that we can reuse it later on."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"%env JOB_ID={job_id}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"checking-the-state-of-your-jobs",children:"Checking the State of your Jobs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Job status"}),": You can check the status of the job using ",(0,s.jsx)(n.code,{children:"bacalhau list"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau list --id-filter ${JOB_ID}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When it says ",(0,s.jsx)(n.code,{children:"Published"})," or ",(0,s.jsx)(n.code,{children:"Completed"}),", that means the job is done, and we can get the results."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Job information"}),": You can find out more information about your job by using ",(0,s.jsx)(n.code,{children:"bacalhau describe"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau describe ${JOB_ID}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Job download"}),": You can download your job results directly by using ",(0,s.jsx)(n.code,{children:"bacalhau get"}),". Alternatively, you can choose to create a directory to store your results. In the command below, we created a directory and downloaded our job output to be stored in that directory."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\nrm -rf results && mkdir -p results\nbacalhau get $JOB_ID --output-dir results\n"})}),"\n",(0,s.jsx)(n.h2,{id:"viewing-your-job-output",children:"Viewing your Job Output"}),"\n",(0,s.jsxs)(n.p,{children:["Each job creates 3 subfolders: the ",(0,s.jsx)(n.strong,{children:"combined_results"}),",",(0,s.jsx)(n.strong,{children:"per_shard files"}),", and the ",(0,s.jsx)(n.strong,{children:"raw"})," directory. To view the file, run the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\ncat results/stdout  # displays the contents of the file\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u250c\u2500\u2500\u2500\u2510\n\u2502 1 \u2502\n\u251c\u2500\u2500\u2500\u2524\n\u2502 1 \u2502\n\u2514\u2500\u2500\u2500\u2518"}),"\n",(0,s.jsx)(n.h2,{id:"running-arbitrary-sql-commands",children:"Running Arbitrary SQL commands"}),"\n",(0,s.jsxs)(n.p,{children:["Below is the ",(0,s.jsx)(n.code,{children:"bacalhau docker run"})," command to to run arbitrary SQL commands over the yellow taxi trips dataset"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash --out job_id\nbacalhau docker run \\\n -i ipfs://bafybeiejgmdpwlfgo3dzfxfv3cn55qgnxmghyv7vcarqe3onmtzczohwaq \\\n  --workdir /inputs \\\n  --id-only \\\n  --wait \\\n  davidgasquez/duckdb:latest \\\n  -- duckdb -s \"select count(*) from '0_yellow_taxi_trips.parquet'\"\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"structure-of-the-command-1",children:"Structure of the command"}),"\n",(0,s.jsx)(n.p,{children:"Let's look closely at the command above:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"bacalhau docker run"}),": call to bacalhau"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"-i ipfs://bafybeiejgmdpwlfgo3dzfxfv3cn55qgnxmghyv7vcarqe3onmtzczohwaq \\"}),": CIDs to use on the job. Mounts them at '/inputs' in the execution."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"davidgasquez/duckdb:latest"}),": the name and the tag of the docker image we are using"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"/inputs"}),": path to input dataset"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"duckdb -s"}),": execute DuckDB"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When a job is submitted, Bacalhau prints out the related ",(0,s.jsx)(n.code,{children:"job_id"}),". We store that in an environment variable so that we can reuse it later on."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Job status"}),": You can check the status of the job using ",(0,s.jsx)(n.code,{children:"bacalhau list"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau list --id-filter ${JOB_ID} --wide\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Job information"}),": You can find out more information about your job by using ",(0,s.jsx)(n.code,{children:"bacalhau describe"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau describe ${JOB_ID}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Job download"}),": You can download your job results directly by using ",(0,s.jsx)(n.code,{children:"bacalhau get"}),". Alternatively, you can choose to create a directory to store your results. In the command below, we created a directory and downloaded our job output to be stored in that directory."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\nrm -rf results && mkdir -p results\nbacalhau get $JOB_ID --output-dir results\n"})}),"\n",(0,s.jsx)(n.h2,{id:"viewing-your-job-output-1",children:"Viewing your Job Output"}),"\n",(0,s.jsxs)(n.p,{children:["Each job creates 3 subfolders: the ",(0,s.jsx)(n.strong,{children:"combined_results"}),",",(0,s.jsx)(n.strong,{children:"per_shard files"}),", and the ",(0,s.jsx)(n.strong,{children:"raw"})," directory. To view the file, run the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"%%bash\ncat results/stdout\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 count_star() \u2502\n\u2502    int64     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502     24648499 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"}),"\n",(0,s.jsx)(n.h2,{id:"need-support",children:"Need Support?"}),"\n",(0,s.jsxs)(n.p,{children:["For questions, and feedback, please reach out in our ",(0,s.jsx)(n.a,{href:"https://github.com/filecoin-project/bacalhau/discussions",children:"forum"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>r});var s=a(7294);const t={},i=s.createContext(t);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);