"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[1111],{312:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=i(5893),t=i(1151);const r={sidebar_label:"Task"},c="Task Specification",o={id:"references/job-specification/task",title:"Task Specification",description:"A Task signifies a distinct unit of work within the broader context of a Job. It defines the specifics of how the task should be executed, where the results should be published, what environment variables are needed, among other configurations",source:"@site/docs/references/job-specification/task.md",sourceDirName:"references/job-specification",slug:"/references/job-specification/task",permalink:"/references/job-specification/task",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/job-specification/task.md",tags:[],version:"current",lastUpdatedAt:1700797095,formattedLastUpdatedAt:"Nov 24, 2023",frontMatter:{sidebar_label:"Task"},sidebar:"documentationSidebar",previous:{title:"State",permalink:"/references/job-specification/state"},next:{title:"Timeouts",permalink:"/references/job-specification/timeouts"}},a={},d=[{value:"<code>Task</code> Parameters",id:"task-parameters",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"task-specification",children:"Task Specification"}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(s.code,{children:"Task"})," signifies a distinct unit of work within the broader context of a ",(0,n.jsx)(s.code,{children:"Job"}),". It defines the specifics of how the task should be executed, where the results should be published, what environment variables are needed, among other configurations"]}),"\n",(0,n.jsxs)(s.h2,{id:"task-parameters",children:[(0,n.jsx)(s.code,{children:"Task"})," Parameters"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Name"})," ",(0,n.jsx)(s.code,{children:"(string : <required>)"}),": A unique identifier representing the name of the task."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Engine"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"./spec-config",children:(0,n.jsx)(s.code,{children:"SpecConfig"})}),(0,n.jsx)(s.code,{children:" : required)"}),": Configures the execution engine for the task, such as ",(0,n.jsx)(s.a,{href:"../other-specifications/engines/docker",children:"Docker"})," or ",(0,n.jsx)(s.a,{href:"../other-specifications/engines/wasm",children:"WebAssembly"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Publisher"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"./spec-config",children:(0,n.jsx)(s.code,{children:"SpecConfig"})}),(0,n.jsx)(s.code,{children:" : optional)"}),": Specifies where the results of the task should be published, such as ",(0,n.jsx)(s.a,{href:"../other-specifications/publishers/s3",children:"S3"})," and ",(0,n.jsx)(s.a,{href:"../other-specifications/publishers/ipfs",children:"IPFS"})," publishers. Only applicable for tasks of type ",(0,n.jsx)(s.code,{children:"batch"})," and ",(0,n.jsx)(s.code,{children:"ops"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Env"})," ",(0,n.jsx)(s.code,{children:"(map[string]string : optional)"}),": A set of environment variables for the driver."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Meta"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"/references/job-specification/meta",children:(0,n.jsx)(s.code,{children:"Meta"})}),(0,n.jsx)(s.code,{children:" : optional)"}),": Allows association of arbitrary metadata with this task."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"InputSources"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"/references/job-specification/input-source",children:(0,n.jsx)(s.code,{children:"InputSource"})}),(0,n.jsx)(s.code,{children:"[] : optional)"}),": Lists remote artifacts that should be downloaded before task execution and mounted within the task, such as from ",(0,n.jsx)(s.a,{href:"../other-specifications/sources/s3",children:"S3"})," or ",(0,n.jsx)(s.a,{href:"../other-specifications/sources/url",children:"HTTP/HTTPs"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"ResultPaths"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"/references/job-specification/result-path",children:(0,n.jsx)(s.code,{children:"ResultPath"})}),(0,n.jsx)(s.code,{children:"[] : optional)"}),": Indicates volumes within the task that should be included in the published result. Only applicable for tasks of type ",(0,n.jsx)(s.code,{children:"batch"})," and ",(0,n.jsx)(s.code,{children:"ops"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Resources"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"/references/job-specification/resources",children:(0,n.jsx)(s.code,{children:"Resources"})}),(0,n.jsx)(s.code,{children:" : optional)"}),": Details the resources that this task requires."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Network"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"/references/job-specification/network",children:(0,n.jsx)(s.code,{children:"Network"})}),(0,n.jsx)(s.code,{children:" : optional)"}),": Configurations related to the networking aspects of the task."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Timeouts"})," ",(0,n.jsx)(s.code,{children:"("}),(0,n.jsx)(s.a,{href:"/references/job-specification/timeouts",children:(0,n.jsx)(s.code,{children:"Timeouts"})}),(0,n.jsx)(s.code,{children:" : optional)"}),": Configurations concerning any timeouts associated with the task."]}),"\n"]})]})}function l(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,s,i)=>{i.d(s,{Z:()=>o,a:()=>c});var n=i(7294);const t={},r=n.createContext(t);function c(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);