"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[1934],{30:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=t(5893),o=t(1151);const s={sidebar_label:"Stable Diffusion -CKPT",sidebar_position:4},r="Stable Diffusion Checkpoint Inference",a={id:"examples/model-inference/Stable-Diffusion-CKPT-Inference/index",title:"Stable Diffusion Checkpoint Inference",description:"stars - badge-generator",source:"@site/docs/examples/model-inference/Stable-Diffusion-CKPT-Inference/index.md",sourceDirName:"examples/model-inference/Stable-Diffusion-CKPT-Inference",slug:"/examples/model-inference/Stable-Diffusion-CKPT-Inference/",permalink:"/examples/model-inference/Stable-Diffusion-CKPT-Inference/",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/model-inference/Stable-Diffusion-CKPT-Inference/index.md",tags:[],version:"current",lastUpdatedAt:1702038777,formattedLastUpdatedAt:"Dec 8, 2023",sidebarPosition:4,frontMatter:{sidebar_label:"Stable Diffusion -CKPT",sidebar_position:4},sidebar:"documentationSidebar",previous:{title:"S3-Model-Inference",permalink:"/examples/model-inference/S3-Model-Inference/"},next:{title:"Stable Diffusion - CPU",permalink:"/examples/model-inference/stable-diffusion-cpu/"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"TD;LR",id:"tdlr",level:2},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Running Locally",id:"running-locally",level:2},{value:"Containerize your Script using Docker",id:"containerize-your-script-using-docker",level:2},{value:"Build the container",id:"build-the-container",level:3},{value:"Push the container",id:"push-the-container",level:3},{value:"Converting model weights to CKPT",id:"converting-model-weights-to-ckpt",level:2},{value:"Running a Bacalhau Job",id:"running-a-bacalhau-job",level:2},{value:"Structure of the command",id:"structure-of-the-command",level:3},{value:"Checking the State of your Jobs",id:"checking-the-state-of-your-jobs",level:2},{value:"Viewing your Job Output",id:"viewing-your-job-output",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"stable-diffusion-checkpoint-inference",children:"Stable Diffusion Checkpoint Inference"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/bacalhau-project/bacalhau",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/stars/bacalhau-project/bacalhau?style=social",alt:"stars - badge-generator"})})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/CompVis/stable-diffusion",children:"Stable Diffusion"})," is a state of the art text-to-image model that generates images from text and was developed as an open-source alternative to ",(0,i.jsx)(n.a,{href:"https://openai.com/dall-e-2/",children:"DALL\xb7E 2"}),". It is based on a ",(0,i.jsx)(n.a,{href:"https://arxiv.org/abs/2102.09672",children:"Diffusion Probabilistic Model"})," and uses a ",(0,i.jsx)(n.a,{href:"https://arxiv.org/abs/1706.03762",children:"Transformer"})," to generate images from text."]}),"\n",(0,i.jsx)(n.p,{children:"This example demonstrates how to use stable diffusion using a finetuned model and run inference on it. The first section describes the development of the code and the container - it is optional as users don't need to build their own containers to use their own custom model. The second section demonstrates how to convert your model weights to ckpt. The third section demonstrates how to run the job using Bacalhau."}),"\n",(0,i.jsx)(n.h2,{id:"tdlr",children:"TD;LR"}),"\n",(0,i.jsx)(n.p,{children:"Running fine-tuned stable diffusion model converted to ckpt on Bacalhau."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,i.jsx)(n.p,{children:"To get started, you need to install:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Bacalhau client, see more information ",(0,i.jsx)(n.a,{href:"https://docs.bacalhau.org/getting-started/installation",children:"here"})]}),"\n",(0,i.jsx)(n.li,{children:"NVIDIA GPU"}),"\n",(0,i.jsx)(n.li,{children:"CUDA drivers"}),"\n",(0,i.jsx)(n.li,{children:"NVIDIA docker"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"running-locally",children:"Running Locally"}),"\n",(0,i.jsxs)(n.p,{children:["The following image is an example generated by the fine-tuned model, it was finetuned on Bacalhau to learn how to finetune your own stable diffusion model\nrefer ",(0,i.jsx)(n.a,{href:"https://docs.bacalhau.org/examples/model-training/Stable-Diffusion-Dreambooth",children:"https://docs.bacalhau.org/examples/model-training/Stable-Diffusion-Dreambooth"})]}),"\n",(0,i.jsx)(n.h2,{id:"containerize-your-script-using-docker",children:"Containerize your Script using Docker"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"You can skip this step and go straight to running a Bacalhau job"})}),"\n",(0,i.jsxs)(n.p,{children:["To build your own docker container, create a ",(0,i.jsx)(n.code,{children:"Dockerfile"}),", which contains instructions to containerize the code for inference."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-Dockerfile",children:'FROM  pytorch/pytorch:1.13.0-cuda11.6-cudnn8-runtime\n\nWORKDIR /\n\nRUN apt update &&  apt install -y git\n\nRUN git clone https://github.com/runwayml/stable-diffusion.git\n\nWORKDIR /stable-diffusion\n\nRUN conda env create -f environment.yaml\n\nSHELL ["conda", "run", "-n", "ldm", "/bin/bash", "-c"]\n\nRUN pip install opencv-python\n\nRUN apt update\n\nRUN apt-get install ffmpeg libsm6 libxext6 libxrender-dev  -y\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This container is using the ",(0,i.jsx)(n.code,{children:"pytorch/pytorch:1.13.0-cuda11.6-cudnn8-runtime"})," image and the working directory is set. Next the Dockerfile installs the same dependencies from earlier in this notebook. Then we add our custom code and pull the dependent repositories."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["See more information on how to containerize your script/app ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/get-started/02_our_app/",children:"here"})]})}),"\n",(0,i.jsx)(n.h3,{id:"build-the-container",children:"Build the container"}),"\n",(0,i.jsxs)(n.p,{children:["We will run ",(0,i.jsx)(n.code,{children:"docker build"})," command to build the container;"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"docker build -t hub-user/repo-name:tag .\n"})}),"\n",(0,i.jsx)(n.p,{children:"Before running the command replace;"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"hub-user"})," with your docker hub username, If you don\u2019t have a docker hub account ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/docker-id/",children:"follow these instructions to create the Docker account"}),", and use the username of the account you created"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"repo-name"})," with the name of the container, you can name it anything you want"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"tag"})," this is not required but you can use the latest tag"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In our case"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker build -t jsacex/stable-diffusion-ckpt\n"})}),"\n",(0,i.jsx)(n.h3,{id:"push-the-container",children:"Push the container"}),"\n",(0,i.jsx)(n.p,{children:"Next, upload the image to the registry. This can be done by using the Docker hub username, repo name or tag."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"docker push <hub-user>/<repo-name>:<tag>\n"})}),"\n",(0,i.jsx)(n.p,{children:"In our case"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker push jsacex/stable-diffusion-ckpt\n"})}),"\n",(0,i.jsx)(n.p,{children:"After the repo image has been pushed to Docker Hub, you can now use the container for running on Bacalhau but before that you need to check whether your model is a ckpt file or not, if your model is a ckpt file you can skip to the running on Bacalhau if not the next section describes how to convert your model into the ckpt format."}),"\n",(0,i.jsx)(n.h2,{id:"converting-model-weights-to-ckpt",children:"Converting model weights to CKPT"}),"\n",(0,i.jsx)(n.p,{children:"To download the convert script:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"wget -q https://github.com/TheLastBen/diffusers/raw/main/scripts/convert_diffusers_to_original_stable_diffusion.py\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To convert the model weights into CKPT format, the ",(0,i.jsx)(n.code,{children:"--half"})," flag cuts the size of the output model from 4GB to 2GB:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"python convert_diffusers_to_original_stable_diffusion.py --model_path <path-to-the-model-weights>  --checkpoint_path <path-to-save-the-checkpoint>/model.ckpt --half\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-a-bacalhau-job",children:"Running a Bacalhau Job"}),"\n",(0,i.jsxs)(n.p,{children:["To do inference on your own checkpoint on Bacalhau you need to first upload it to your public storage, which can be mounted anywhere on your machine. In this case, we will be using ",(0,i.jsx)(n.a,{href:"https://nft.storage/",children:"NFT.Storage"})," (Recommended Option). To upload your dataset using ",(0,i.jsx)(n.a,{href:"https://nft.storage/docs/how-to/nftup/",children:"NFTup"}),"  just drag and drop your directory it will upload it to IPFS"]}),"\n",(0,i.jsx)(n.p,{children:"After the checkpoint file has been uploaded copy its CID."}),"\n",(0,i.jsx)(n.p,{children:"To submit a job, run the following Bacalhau command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'%%bash --out job_id\nbacalhau docker run \\\n--gpu 1 \\\n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\n--wait \\\n--id-only \\\n-i ipfs://QmUCJuFZ2v7KvjBGHRP2K1TMPFce3reTkKVGF2BJY5bXdZ:/DavidAronchick.ckpt \\\njsacex/stable-diffusion-ckpt \\\n-- conda run --no-capture-output -n ldm python scripts/txt2img.py --prompt "a photo of aronchick drinking coffee" --plms --ckpt ../DavidAronchick.ckpt --skip_grid --n_samples 1 --skip_grid --outdir ../outputs \n'})}),"\n",(0,i.jsx)(n.h3,{id:"structure-of-the-command",children:"Structure of the command"}),"\n",(0,i.jsx)(n.p,{children:"Let's look closely at the command above:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"--gpu"})," : here we request 1 GPU"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-i ipfs://QmUCJuFZ2v7KvjBGHRP2K1TMPFce3reTkKVGF2BJY5bXdZ:/DavidAronchick.ckpt"}),":  Path-to-mount-the-checkpoint"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-- conda run --no-capture-output -n ldm"}),":  since we are using conda we need to specify the name of the environment which we are going to use in this case its ",(0,i.jsx)(n.code,{children:"ldm"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"scripts/txt2img.py"}),": running the python script"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:'--prompt "a photo of aronchick drinking coffee"'}),": the prompt you need to specify the session name in the prompt eg the session name here is aronchick"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"--plms"}),": the sampler you want to use in this case we will use the plms sampler"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"--ckpt ../DavidAronchick.ckpt"}),": and then specify the path to our checkpoint"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"--n_samples 1"}),": no of samples we want to produce"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"--skip_grid "}),": skip creating a grid of images"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"--outdir ../outputs"}),": path to store the outputs"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"--seed $RANDOM"}),": The output generated on the same prompt will always be the same for different outputs on the same prompt set the seed parameter to random"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["When a job is submitted, Bacalhau prints out the related ",(0,i.jsx)(n.code,{children:"job_id"}),". We store that in an environment variable so that we can reuse it later on."]}),"\n",(0,i.jsx)(n.h2,{id:"checking-the-state-of-your-jobs",children:"Checking the State of your Jobs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job status"}),": You can check the status of the job using ",(0,i.jsx)(n.code,{children:"bacalhau list"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau list --id-filter ${JOB_ID} --wide\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When it says ",(0,i.jsx)(n.code,{children:"Published"})," or ",(0,i.jsx)(n.code,{children:"Completed"}),", that means the job is done, and we can get the results."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job information"}),": You can find out more information about your job by using ",(0,i.jsx)(n.code,{children:"bacalhau describe"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"%%bash\nbacalhau describe ${JOB_ID}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job download"}),": You can download your job results directly by using ",(0,i.jsx)(n.code,{children:"bacalhau get"}),". Alternatively, you can choose to create a directory to store your results. In the command below, we created a directory and downloaded our job output to be stored in that directory."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"%%bash\nrm -rf results && mkdir -p results\nbacalhau get $JOB_ID --output-dir results\n"})}),"\n",(0,i.jsx)(n.h2,{id:"viewing-your-job-output",children:"Viewing your Job Output"}),"\n",(0,i.jsx)(n.p,{children:"To view the file, run the following command:"}),"\n",(0,i.jsx)(n.p,{children:"View the outputs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import IPython.display as display\ndisplay.Image("results/outputs/samples/00001.png")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"png",src:t(3947).Z+"",width:"512",height:"512"})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3947:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/index_19_0-93ca4dbcb23afc760c01faa65cac5699.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var i=t(7294);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);