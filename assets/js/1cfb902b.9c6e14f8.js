"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[9790],{4759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=n(5893),r=n(1151);const i={sidebar_label:"InputSource"},a="InputSource Specification",c={id:"references/job-specification/input-source",title:"InputSource Specification",description:"An InputSource defines where and how to retrieve specific artifacts needed for a Task, such as files or data, and where to mount them within the task's context. This ensures the necessary data is present before the task's execution begins.",source:"@site/docs/references/job-specification/input-source.md",sourceDirName:"references/job-specification",slug:"/references/job-specification/input-source",permalink:"/references/job-specification/input-source",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/job-specification/input-source.md",tags:[],version:"current",lastUpdatedAt:1702038777,formattedLastUpdatedAt:"Dec 8, 2023",frontMatter:{sidebar_label:"InputSource"},sidebar:"documentationSidebar",previous:{title:"Constraint",permalink:"/references/job-specification/constraint"},next:{title:"Label",permalink:"/references/job-specification/label"}},o={},d=[{value:"<code>InputSource</code> Parameters:",id:"inputsource-parameters",level:2},{value:"Usage Examples",id:"usage-examples",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"inputsource-specification",children:"InputSource Specification"}),"\n",(0,s.jsxs)(t.p,{children:["An ",(0,s.jsx)(t.code,{children:"InputSource"})," defines where and how to retrieve specific artifacts needed for a ",(0,s.jsx)(t.a,{href:"task",children:(0,s.jsx)(t.code,{children:"Task"})}),", such as files or data, and where to mount them within the task's context. This ensures the necessary data is present before the task's execution begins."]}),"\n",(0,s.jsxs)(t.p,{children:["Bacalhau's ",(0,s.jsx)(t.code,{children:"InputSource"})," natively supports fetching data from remote sources like S3 and IPFS and can also mount local directories. It is intended to be flexible for future expansion."]}),"\n",(0,s.jsxs)(t.h2,{id:"inputsource-parameters",children:[(0,s.jsx)(t.code,{children:"InputSource"})," Parameters:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Source"})," ",(0,s.jsxs)("code",{children:["(",(0,s.jsx)("a",{href:"./spec-config",children:"SpecConfig"})," : <required>)"]}),": Specifies the origin of the artifact, which could be a URL, an S3 bucket, or other locations."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Alias"})," ",(0,s.jsx)(t.code,{children:"(string: <optional>)"}),": An optional identifier for this input source. It's particularly useful for dynamic operations within a task, such as dynamically importing data in WebAssembly using an alias."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Target"})," ",(0,s.jsx)(t.code,{children:"(string: <required>)"}),": Defines the path inside the task's environment where the retrieved artifact should be mounted or stored. This ensures that the task can access the data during its execution."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-YAML",children:"InputSources:\n  - Source:\n      Type: s3\n      Params:\n        Bucket: my_bucket\n        Region: us-west-1\n    Target: /my_s3_data\n  - Source:\n      Type: localDirectory\n      Params:\n        SourcePath: /path/to/local/directory\n        ReadWrite: true\n    Target: /my_local_data\n"})}),"\n",(0,s.jsxs)(t.p,{children:["In this example, the first input source fetches data from an S3 bucket and mounts it at ",(0,s.jsx)(t.code,{children:"/my_s3_data"})," within the task. The second input source mounts a local directory at ",(0,s.jsx)(t.code,{children:"/my_local_data"})," and allows the task to read and write data to it."]})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>a});var s=n(7294);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);