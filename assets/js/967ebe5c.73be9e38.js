"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[56],{1259:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=t(5893),i=t(1151);const a={sidebar_label:"Constraint"},o="Constraint Specification",r={id:"references/job-specification/constraint",title:"Constraint Specification",description:"A Constraint represents a condition that must be met for a compute node to be eligible to run a given job. Operators have the flexibility to manually define node labels when initiating a node using the bacalhau serve command. Additionally, Bacalhau boasts features like automatic resource detection and dynamic labeling, further enhancing its capability.",source:"@site/docs/references/job-specification/constraint.md",sourceDirName:"references/job-specification",slug:"/references/job-specification/constraint",permalink:"/references/job-specification/constraint",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/job-specification/constraint.md",tags:[],version:"current",lastUpdatedAt:1702058642,formattedLastUpdatedAt:"Dec 8, 2023",frontMatter:{sidebar_label:"Constraint"},sidebar:"documentationSidebar",previous:{title:"Job",permalink:"/references/job-specification/job"},next:{title:"InputSource",permalink:"/references/job-specification/input-source"}},c={},l=[{value:"<code>Constraint</code> Parameters:",id:"constraint-parameters",level:3},{value:"Example:",id:"example",level:3},{value:"Notes:",id:"notes",level:3}];function d(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"constraint-specification",children:"Constraint Specification"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"Constraint"})," represents a condition that must be met for a compute node to be eligible to run a given job. Operators have the flexibility to manually define node labels when initiating a node using the bacalhau serve command. Additionally, Bacalhau boasts features like automatic resource detection and dynamic labeling, further enhancing its capability."]}),"\n",(0,s.jsx)(n.p,{children:"By defining constraints, you can ensure that jobs are scheduled on nodes that have the necessary requirements or conditions."}),"\n",(0,s.jsxs)(n.h3,{id:"constraint-parameters",children:[(0,s.jsx)(n.code,{children:"Constraint"})," Parameters:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Key"}),": The name of the attribute or property to check on the compute node. This could be anything from a specific hardware feature, operating system version, or any other node property."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Operator"}),": Determines the kind of comparison to be made against the ",(0,s.jsx)(n.code,{children:"Key"}),"'s value, which can be:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"in"}),": Checks if the Key's value exists within the provided list of values."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"notin"}),": Ensures the Key's value doesn't match any in the provided list of values."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exists"}),": Verifies that a value for the specified Key is present, regardless of its actual value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"!"}),": Confirms the absence of the specified Key. i.e DoesNotExist"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gt"}),": Assesses if the Key's value is greater than the provided value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"lt"}),": Assesses if the Key's value is less than the provided value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"="})," & ",(0,s.jsx)(n.code,{children:"=="}),": Both are used to compare the Key's value for an exact match with the provided value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"!="}),": Ensures the Key's value is not the same as the provided value."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Values (optional)"}),": A list of values that the node attribute, specified by the ",(0,s.jsx)(n.code,{children:"Key"}),", is compared against using the ",(0,s.jsx)(n.code,{children:"Operator"}),". This is not needed for operators like ",(0,s.jsx)(n.code,{children:"exists"})," or ",(0,s.jsx)(n.code,{children:"!"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example:"}),"\n",(0,s.jsxs)(n.p,{children:["Consider a scenario where a job should only run on nodes with a GPU and an operating system version greater than ",(0,s.jsx)(n.code,{children:"2.0"}),". The constraints for such a requirement might look like:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'constraints:\n  - key: "hardware.gpu"\n    operator: "exists"\n  - key: "Operating-System"\n    operator: "="\n    values: ["linux"]\n  - key: "region"\n    operator: "in"\n    values: ["eu-west-1,eu-west-2"]\n'})}),"\n",(0,s.jsx)(n.p,{children:"In this example, the first constraint checks if the node has a GPU, the second constraint ensures the OS is linux, and deployed in eu-west-1 or eu-west-2`."}),"\n",(0,s.jsx)(n.h3,{id:"notes",children:"Notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Constraints are evaluated as a logical AND, meaning all constraints must be satisfied for a node to be eligible."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Using too many specific constraints can lead to a job not being scheduled if no nodes satisfy all the conditions."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"It's essential to balance the specificity of constraints with the broader needs and resources available in the cluster."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var s=t(7294);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);