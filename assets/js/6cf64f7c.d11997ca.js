"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[2537],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8531:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={},i="Bacalhau API Documentation",l={unversionedId:"references/api/index",id:"references/api/index",title:"Bacalhau API Documentation",description:"Welcome to the official API documentation for Bacalhau. This guide provides a detailed insight into Bacalhau's RESTful HTTP APIs and demonstrates how to make the most out of them.",source:"@site/docs/references/api/index.md",sourceDirName:"references/api",slug:"/references/api/",permalink:"/references/api/",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/api/index.md",tags:[],version:"current",lastUpdatedAt:1699979881,formattedLastUpdatedAt:"Nov 14, 2023",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"References",permalink:"/references"},next:{title:"Agent",permalink:"/references/api/agent"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Label Filtering",id:"label-filtering",level:3},{value:"Pagination",id:"pagination",level:3},{value:"Ordering",id:"ordering",level:3},{value:"Pretty JSON Output",id:"pretty-json-output",level:3},{value:"HTTP Methods",id:"http-methods",level:3},{value:"HTTP Response Codes",id:"http-response-codes",level:3}],u={toc:p},d="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"bacalhau-api-documentation"},"Bacalhau API Documentation"),(0,r.kt)("p",null,"Welcome to the official API documentation for Bacalhau. This guide provides a detailed insight into Bacalhau's RESTful HTTP APIs and demonstrates how to make the most out of them."),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,'Bacalhau operates on an "API-first" approach, providing an interface for users to interact with the system programmatically. '),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Endpoint Prefix"),": All APIs are versioned and prefixed with ",(0,r.kt)("inlineCode",{parentName:"li"},"/api/v1"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Default Port"),": By default, Bacalhau listens on port ",(0,r.kt)("inlineCode",{parentName:"li"},"1234"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"API Nodes"),": ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Orchestrator"),": Handles user requests, schedules, and monitors jobs. Majority of Bacalhau's APIs are dedicated to Orchestrator interactions. These are accessible at ",(0,r.kt)("inlineCode",{parentName:"li"},"/api/v1/orchestrator"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Compute Nodes"),": Acts as worker nodes and executes the jobs. Both Orchestrator and Compute nodes expose some common APIs under ",(0,r.kt)("inlineCode",{parentName:"li"},"/api/v1/agent")," for querying agent info and health status.")))),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("h3",{id:"label-filtering"},"Label Filtering"),(0,r.kt)("p",null,"Bacalhau supports label filtering on certain endpoints, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/v1/orchestrator/jobs")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/v1/orchestrator/nodes"),". This mechanism works similarly to constraints, letting you narrow down your search based on certain criteria. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --get \"0.0.0.0:1234/api/v1/orchestrator/jobs\" --data-urlencode 'labels=env in (prod,dev)'\n")),(0,r.kt)("h3",{id:"pagination"},"Pagination"),(0,r.kt)("p",null,"To handle large datasets, Bacalhau supports pagination. Users can define the ",(0,r.kt)("inlineCode",{parentName:"p"},"limit")," in their request and then utilize the ",(0,r.kt)("inlineCode",{parentName:"p"},"next_token")," from the response to fetch subsequent data chunks."),(0,r.kt)("h3",{id:"ordering"},"Ordering"),(0,r.kt)("p",null,"To sort the results of list-based queries, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"order_by")," parameter. By default, the list will be sorted in ascending order. If you want to reverse it, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"reverse")," parameter. Note that the fields available for sorting might vary depending on the specific API endpoint."),(0,r.kt)("h3",{id:"pretty-json-output"},"Pretty JSON Output"),(0,r.kt)("p",null,"By default, Bacalhau's APIs provide a minimized JSON response. If you want to view the output in a more readable format, append ",(0,r.kt)("inlineCode",{parentName:"p"},"pretty")," to the query string."),(0,r.kt)("h3",{id:"http-methods"},"HTTP Methods"),(0,r.kt)("p",null,"Being RESTful in nature, Bacalhau's API endpoints rely on standard HTTP methods to perform various actions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GET"),": Fetch data."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PUT"),": Update or create data."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"DELETE"),": Remove data.")),(0,r.kt)("p",null,"The behavior of an API depends on its HTTP method. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/v1/orchestrator/jobs"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GET"),": Lists all jobs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PUT"),": Submits a new job."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"DELETE"),": Stops a job.")),(0,r.kt)("h3",{id:"http-response-codes"},"HTTP Response Codes"),(0,r.kt)("p",null,"Understanding HTTP response codes is crucial. A ",(0,r.kt)("inlineCode",{parentName:"p"},"2xx")," series indicates a successful operation, ",(0,r.kt)("inlineCode",{parentName:"p"},"4xx")," indicates client-side errors, and ",(0,r.kt)("inlineCode",{parentName:"p"},"5xx")," points to server-side issues. Always refer to the message accompanying the code for more information."))}c.isMDXComponent=!0}}]);