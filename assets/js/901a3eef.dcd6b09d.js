"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[4048],{2366:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=i(5893),t=i(1151);const r={sidebar_label:"GPU Support",sidebar_position:160,description:"How to enable GPU support on your Bacalhau node."},s="GPU Support",a={id:"running-node/gpu",title:"GPU Support",description:"How to enable GPU support on your Bacalhau node.",source:"@site/docs/running-node/gpu.md",sourceDirName:"running-node",slug:"/running-node/gpu",permalink:"/running-node/gpu",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/running-node/gpu.md",tags:[],version:"current",lastUpdatedAt:1702309452,formattedLastUpdatedAt:"Dec 11, 2023",sidebarPosition:160,frontMatter:{sidebar_label:"GPU Support",sidebar_position:160,description:"How to enable GPU support on your Bacalhau node."},sidebar:"documentationSidebar",previous:{title:"Test Network Locally",permalink:"/running-node/test-network"},next:{title:"Configuring node persistence",permalink:"/running-node/persistence"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Nvidia",id:"nvidia",level:3},{value:"AMD",id:"amd",level:3},{value:"Intel",id:"intel",level:3},{value:"GPU Node Configuration",id:"gpu-node-configuration",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"gpu-support",children:"GPU Support"}),"\n",(0,o.jsx)(n.p,{children:"Bacalhau supports GPUs out of the box and defaults to allowing execution on all GPUs installed on the node."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.p,{children:"Bacalhau makes the assumption that you have installed all the necessary drivers and tools on your node host and have appropriately configured them for use by Docker."}),"\n",(0,o.jsx)(n.p,{children:"In general for GPUs from any vendor, the Bacalhau client requires:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://get.docker.com/",children:"Docker"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user",children:"Permission to access Docker"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"nvidia",children:"Nvidia"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html",children:"Drivers for your GPU"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html",children:"NVIDIA Container Toolkit (nvidia-docker2)"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"nvidia-smi"})," installed and functional"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"You can test whether you have a working GPU setup with the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run --rm --gpus all nvidia/cuda:11.0.3-base-ubuntu20.04 nvidia-smi\n"})}),"\n",(0,o.jsx)(n.h3,{id:"amd",children:"AMD"}),"\n",(0,o.jsxs)(n.p,{children:["Bacalhau requires AMD drivers to be appropriately installed and access to the\n",(0,o.jsx)(n.code,{children:"rocm-smi"})," tool."]}),"\n",(0,o.jsx)(n.p,{children:"You can test whether you have a working GPU setup with the following command,\nwhich should print details of your GPUs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run --rm --device=/dev/kfd --device=/dev/dri --entrypoint=rocm-smi rocm/rocm-terminal\n"})}),"\n",(0,o.jsx)(n.h3,{id:"intel",children:"Intel"}),"\n",(0,o.jsxs)(n.p,{children:["Bacalhau requires appropriate Intel drivers to be installed and access to the\n",(0,o.jsx)(n.code,{children:"xpu-smi"})," tool."]}),"\n",(0,o.jsx)(n.p,{children:"You can test whether you have a working GPU setup with the following command,\nwhich should print details of your GPUs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run --rm --device=/dev/dri --entrypoint=/bin/bash intel/xpumanager -- -c 'xpumd & sleep 5; xpumcli discovery'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"gpu-node-configuration",children:"GPU Node Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Access to GPUs can be controlled using ",(0,o.jsx)(n.a,{href:"/running-node/resource-limits",children:"resource limits"}),".\nTo limit the number of GPUs that can be used per job, set a job resource limit.\nTo limit access to GPUs from all jobs, set a total resource limit."]})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var o=i(7294);const t={},r=o.createContext(t);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);