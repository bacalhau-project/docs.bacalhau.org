"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[1687],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,b=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(b,o(o({ref:t},p),{},{components:n})):r.createElement(b,o({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9862:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"Job"},o="Job Specification",l={unversionedId:"references/job-specification/job",id:"references/job-specification/job",title:"Job Specification",description:"A Job represents a discrete unit of work that can be scheduled and executed. It carries all the necessary information to define the nature of the work, how it should be executed, and the resources it requires.",source:"@site/docs/references/job-specification/job.md",sourceDirName:"references/job-specification",slug:"/references/job-specification/job",permalink:"/references/job-specification/job",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/job-specification/job.md",tags:[],version:"current",lastUpdatedAt:1699979881,formattedLastUpdatedAt:"Nov 14, 2023",frontMatter:{sidebar_label:"Job"},sidebar:"documentationSidebar",previous:{title:"list",permalink:"/references/cli/node/list/"},next:{title:"Constraint",permalink:"/references/job-specification/constraint"}},s={},c=[{value:"<code>job</code> Parameters",id:"job-parameters",level:2},{value:"Server-Generated Parameters",id:"server-generated-parameters",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"job-specification"},"Job Specification"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"Job")," represents a discrete unit of work that can be scheduled and executed. It carries all the necessary information to define the nature of the work, how it should be executed, and the resources it requires."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"Type: batch\nCount: 1\nPriority: 50\nMeta:\n  version: \"1.2.5\"\nLabels:\n  project: \"my-project\"\nConstraints:\n  - Key: Architecture\n    Operator: '='\n    Values:\n      - arm64\n  - Key: region\n    Operator: '='\n    Values:\n      - us-west-2\nTasks:\n  #...\n")),(0,a.kt)("h2",{id:"job-parameters"},(0,a.kt)("inlineCode",{parentName:"h2"},"job")," Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Name")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(string : <optional>)"),": A logical name to refer to the job. Defaults to job ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Namespace")," ",(0,a.kt)("inlineCode",{parentName:"li"},'(string: "default")'),": The namespace in which the job is running. ",(0,a.kt)("inlineCode",{parentName:"li"},"ClientID")," is used as a namespace in the public demo network."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Type")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(string: <required>)"),": The type of the job, such as ",(0,a.kt)("inlineCode",{parentName:"li"},"batch"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"ops"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"daemon")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"service"),". You can learn more about the supported jobs types in the ",(0,a.kt)("a",{parentName:"li",href:"/topic-guides/job-types"},"Job Types")," guide."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Priority")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(int: 0"),"): Determines the scheduling priority."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Count")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(int: <required)"),": Number of replicas to be scheduled. This is only applicable for jobs of type ",(0,a.kt)("inlineCode",{parentName:"li"},"batch")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"service"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Meta")," ",(0,a.kt)("code",null,"(",(0,a.kt)("a",{href:"./meta"},"Meta")," : nil)"),": Arbitrary metadata associated with the job."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Labels")," ",(0,a.kt)("code",null,"(",(0,a.kt)("a",{href:"./label"},"Label"),"[] : nil)"),": Arbitrary labels associated with the job for filtering purposes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Constraints")," ",(0,a.kt)("code",null,"(",(0,a.kt)("a",{href:"./constraint"},"Constraint"),"[] : nil)"),": These are selectors which must be true for a compute node to run this job."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Tasks")," ",(0,a.kt)("code",null,"(",(0,a.kt)("a",{href:"./task"},"Task"),"[] : \\<required",">",")"),":: Task associated with the job, which defines a unit of work within the job. Today we are only supporting single task per job, but with future plans to extend this. ")),(0,a.kt)("h2",{id:"server-generated-parameters"},"Server-Generated Parameters"),(0,a.kt)("p",null,"The following parameters are generated by the server and should not be set directly."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ID")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(string)"),": A unique identifier assigned to this job. It's auto-generated by the server and should not be set directly. Used for distinguishing between jobs with similar names."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"State")," ",(0,a.kt)("code",null,"(",(0,a.kt)("a",{href:"./state"},"State"),")"),": Represents the current state of the job."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Version")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(int)"),": A monotonically increasing version number incremented on job specification update."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Revision")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(int)"),": A monotonically increasing revision number incremented on each update to the job's state or specification."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CreateTime")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(int)"),": Timestamp of job creation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ModifyTime")," ",(0,a.kt)("inlineCode",{parentName:"li"},"(int)"),": Timestamp of last job modification.")))}d.isMDXComponent=!0}}]);