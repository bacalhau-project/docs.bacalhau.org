"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[2537],{5604:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(5893),r=s(1151);const i={},a="Bacalhau API Documentation",o={id:"references/api/index",title:"Bacalhau API Documentation",description:"Welcome to the official API documentation for Bacalhau. This guide provides a detailed insight into Bacalhau's RESTful HTTP APIs and demonstrates how to make the most out of them.",source:"@site/docs/references/api/index.md",sourceDirName:"references/api",slug:"/references/api/",permalink:"/references/api/",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/api/index.md",tags:[],version:"current",lastUpdatedAt:1700058439,formattedLastUpdatedAt:"Nov 15, 2023",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"References",permalink:"/references"},next:{title:"Agent",permalink:"/references/api/agent"}},d={},l=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Label Filtering",id:"label-filtering",level:3},{value:"Pagination",id:"pagination",level:3},{value:"Ordering",id:"ordering",level:3},{value:"Pretty JSON Output",id:"pretty-json-output",level:3},{value:"HTTP Methods",id:"http-methods",level:3},{value:"HTTP Response Codes",id:"http-response-codes",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"bacalhau-api-documentation",children:"Bacalhau API Documentation"}),"\n",(0,t.jsx)(n.p,{children:"Welcome to the official API documentation for Bacalhau. This guide provides a detailed insight into Bacalhau's RESTful HTTP APIs and demonstrates how to make the most out of them."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:'Bacalhau operates on an "API-first" approach, providing an interface for users to interact with the system programmatically.'}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Endpoint Prefix"}),": All APIs are versioned and prefixed with ",(0,t.jsx)(n.code,{children:"/api/v1"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Default Port"}),": By default, Bacalhau listens on port ",(0,t.jsx)(n.code,{children:"1234"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Nodes"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Orchestrator"}),": Handles user requests, schedules, and monitors jobs. Majority of Bacalhau's APIs are dedicated to Orchestrator interactions. These are accessible at ",(0,t.jsx)(n.code,{children:"/api/v1/orchestrator"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Compute Nodes"}),": Acts as worker nodes and executes the jobs. Both Orchestrator and Compute nodes expose some common APIs under ",(0,t.jsx)(n.code,{children:"/api/v1/agent"})," for querying agent info and health status."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsx)(n.h3,{id:"label-filtering",children:"Label Filtering"}),"\n",(0,t.jsxs)(n.p,{children:["Bacalhau supports label filtering on certain endpoints, such as ",(0,t.jsx)(n.code,{children:"/api/v1/orchestrator/jobs"})," and ",(0,t.jsx)(n.code,{children:"/api/v1/orchestrator/nodes"}),". This mechanism works similarly to constraints, letting you narrow down your search based on certain criteria."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl --get \"0.0.0.0:1234/api/v1/orchestrator/jobs\" --data-urlencode 'labels=env in (prod,dev)'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"pagination",children:"Pagination"}),"\n",(0,t.jsxs)(n.p,{children:["To handle large datasets, Bacalhau supports pagination. Users can define the ",(0,t.jsx)(n.code,{children:"limit"})," in their request and then utilize the ",(0,t.jsx)(n.code,{children:"next_token"})," from the response to fetch subsequent data chunks."]}),"\n",(0,t.jsx)(n.h3,{id:"ordering",children:"Ordering"}),"\n",(0,t.jsxs)(n.p,{children:["To sort the results of list-based queries, use the ",(0,t.jsx)(n.code,{children:"order_by"})," parameter. By default, the list will be sorted in ascending order. If you want to reverse it, use the ",(0,t.jsx)(n.code,{children:"reverse"})," parameter. Note that the fields available for sorting might vary depending on the specific API endpoint."]}),"\n",(0,t.jsx)(n.h3,{id:"pretty-json-output",children:"Pretty JSON Output"}),"\n",(0,t.jsxs)(n.p,{children:["By default, Bacalhau's APIs provide a minimized JSON response. If you want to view the output in a more readable format, append ",(0,t.jsx)(n.code,{children:"pretty"})," to the query string."]}),"\n",(0,t.jsx)(n.h3,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,t.jsx)(n.p,{children:"Being RESTful in nature, Bacalhau's API endpoints rely on standard HTTP methods to perform various actions:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GET"}),": Fetch data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PUT"}),": Update or create data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DELETE"}),": Remove data."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The behavior of an API depends on its HTTP method. For example, ",(0,t.jsx)(n.code,{children:"/api/v1/orchestrator/jobs"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GET"}),": Lists all jobs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PUT"}),": Submits a new job."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DELETE"}),": Stops a job."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"http-response-codes",children:"HTTP Response Codes"}),"\n",(0,t.jsxs)(n.p,{children:["Understanding HTTP response codes is crucial. A ",(0,t.jsx)(n.code,{children:"2xx"})," series indicates a successful operation, ",(0,t.jsx)(n.code,{children:"4xx"})," indicates client-side errors, and ",(0,t.jsx)(n.code,{children:"5xx"})," points to server-side issues. Always refer to the message accompanying the code for more information."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var t=s(7294);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);