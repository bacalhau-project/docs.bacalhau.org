"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[44],{25:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=i(5893),t=i(1151);const r={sidebar_label:"S3"},l="S3 Publisher Specification",o={id:"references/other-specifications/publishers/s3",title:"S3 Publisher Specification",description:"Bacalhau's S3 Publisher provides users with a secure and efficient method to publish task results to any S3-compatible storage service. This publisher supports not just AWS S3, but other S3-compatible services offered by cloud providers like Google Cloud Storage and Azure Blob Storage, as well as open-source options like MinIO. The integration is designed to be highly flexible, ensuring users can choose the storage option that aligns with their needs, privacy preferences, and operational requirements.",source:"@site/docs/references/other-specifications/publishers/s3.md",sourceDirName:"references/other-specifications/publishers",slug:"/references/other-specifications/publishers/s3",permalink:"/references/other-specifications/publishers/s3",draft:!1,unlisted:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/references/other-specifications/publishers/s3.md",tags:[],version:"current",lastUpdatedAt:1702058642,formattedLastUpdatedAt:"Dec 8, 2023",frontMatter:{sidebar_label:"S3"},sidebar:"documentationSidebar",previous:{title:"IPFS",permalink:"/references/other-specifications/publishers/ipfs"},next:{title:"Sources",permalink:"/category/sources"}},a={},c=[{value:"<code>S3 Publisher</code> Parameters",id:"s3-publisher-parameters",level:2},{value:"Publishing Flexibility",id:"publishing-flexibility",level:3},{value:"Published Result Spec",id:"published-result-spec",level:3},{value:"Dynamic Naming for Published S3 Objects",id:"dynamic-naming-for-published-s3-objects",level:3},{value:"Example",id:"example",level:3},{value:"Example (Imperative/CLI)",id:"example-imperativecli",level:3},{value:"Credential Requirements",id:"credential-requirements",level:3}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"s3-publisher-specification",children:"S3 Publisher Specification"}),"\n",(0,n.jsx)(s.p,{children:"Bacalhau's S3 Publisher provides users with a secure and efficient method to publish task results to any S3-compatible storage service. This publisher supports not just AWS S3, but other S3-compatible services offered by cloud providers like Google Cloud Storage and Azure Blob Storage, as well as open-source options like MinIO. The integration is designed to be highly flexible, ensuring users can choose the storage option that aligns with their needs, privacy preferences, and operational requirements."}),"\n",(0,n.jsxs)(s.h2,{id:"s3-publisher-parameters",children:[(0,n.jsx)(s.code,{children:"S3 Publisher"})," Parameters"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Bucket"})," ",(0,n.jsx)(s.code,{children:"(string: <required>)"}),": The name of the S3 bucket where the task results will be stored."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Key"})," ",(0,n.jsx)(s.code,{children:"(string: <required>)"}),": The object key within the specified bucket where the task results will be stored."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Endpoint"})," ",(0,n.jsx)(s.code,{children:"(string: <optional>)"}),": The endpoint URL of the S3 service (useful for S3-compatible services)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Region"})," ",(0,n.jsx)(s.code,{children:"(string: <optional>)"}),": The region where the S3 bucket is located."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Compress"})," ",(0,n.jsx)(s.code,{children:"(bool: false)"}),": Indicates whether the task results should be compressed before storage."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"publishing-flexibility",children:"Publishing Flexibility"}),"\n",(0,n.jsxs)(s.p,{children:["The S3 Publisher is adept at handling both individual files and full directories. Each file within a directory is uploaded as a separate S3 object. If the ",(0,n.jsx)(s.code,{children:"Compress"})," option is enabled, the entire directory is compressed into a single object, enhancing efficiency and reducing storage requirements."]}),"\n",(0,n.jsx)(s.h3,{id:"published-result-spec",children:"Published Result Spec"}),"\n",(0,n.jsxs)(s.p,{children:["Results published to S3 are stored as objects that can also be used as inputs to other Bacalhau jobs by using ",(0,n.jsx)(s.a,{href:"../sources/s3",children:"S3 Input Source"}),". The published result specification includes the following parameters:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Bucket"}),": Confirms the name of the bucket containing the stored results."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Key"}),": Identifies the unique object key within the specified bucket."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Region"}),": Notes the AWS region of the bucket."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Endpoint"}),": Records the endpoint URL for S3-compatible storage services."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"VersionID"}),": The version ID of the stored object, enabling versioning support for retrieving specific versions of stored data."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"ChecksumSHA256"}),": The SHA-256 checksum of the stored object, providing a method to verify data integrity."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Note:"})," ",(0,n.jsx)(s.code,{children:"ChecksumSHA256"})," and ",(0,n.jsx)(s.code,{children:"VersionID"})," are only returned when the ",(0,n.jsx)(s.code,{children:"Compress"})," option is enabled, offering users a method to verify the integrity of the compressed data and to track different versions of the stored objects."]}),"\n",(0,n.jsx)(s.h3,{id:"dynamic-naming-for-published-s3-objects",children:"Dynamic Naming for Published S3 Objects"}),"\n",(0,n.jsx)(s.p,{children:"With the S3 Publisher in Bacalhau, you have the flexibility to use dynamic naming for the objects you publish to S3. This allows you to incorporate specific job and execution details into the object key, making it easier to trace, manage, and organize your published artifacts."}),"\n",(0,n.jsx)(s.p,{children:"Bacalhau supports the following dynamic placeholders that will be replaced with their actual values during the publishing process:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"{executionID}"}),": Replaced with the specific execution ID."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"{jobID}"}),": Replaced with the ID of the job."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"{date}"}),": Replaced with the current date in the format ",(0,n.jsx)(s.code,{children:"YYYYMMDD"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"{time}"}),": Replaced with the current time in the format ",(0,n.jsx)(s.code,{children:"HHMMSS"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Additionally, if you are publishing an archive and the object key does not end with ",(0,n.jsx)(s.code,{children:".tar.gz"}),", it will be automatically appended. Conversely, if you're not archiving and the key doesn't end with a ",(0,n.jsx)(s.code,{children:"/"}),", a trailing slash will be added."]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Example"})}),"\n",(0,n.jsx)(s.p,{children:"Imagine you've specified the following object key pattern for publishing:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"results/{jobID}/{date}/{time}/\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Given a job with ID ",(0,n.jsx)(s.code,{children:"abc123"}),", executed on ",(0,n.jsx)(s.code,{children:"2023-09-26"})," at ",(0,n.jsx)(s.code,{children:"14:05:30"}),", the published object key would be:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"results/abc123/20230926/140530/\n"})}),"\n",(0,n.jsx)(s.p,{children:"This dynamic naming feature offers a powerful way to create organized, intuitive naming conventions for your Bacalhau published objects in S3."}),"\n",(0,n.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.p,{children:"Here\u2019s an example YAML configuration that outlines the process of using the S3 Publisher with Bacalhau:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'Publisher:\n  Type: "s3"\n  Params:\n    Bucket: "my-task-results"\n    Key: "task123/result.tar.gz"\n    Endpoint: "https://s3.us-west-2.amazonaws.com"\n    Compress: true\n'})}),"\n",(0,n.jsxs)(s.p,{children:["In this configuration, task results will be published to the specified S3 bucket and object key. If you\u2019re using an S3-compatible service, simply update the ",(0,n.jsx)(s.code,{children:"Endpoint"})," parameter with the appropriate URL."]}),"\n",(0,n.jsx)(s.p,{children:"The results will be compressed into a single object, and the published result specification will look like:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'PublishedResult:\n  Type: "s3"\n  Params:\n    Bucket: "my-task-results"\n    Key: "task123/result.tar.gz"\n    Endpoint: "https://s3.us-west-2.amazonaws.com"\n    Region: "us-west-2"\n    ChecksumSHA256: "0x9a3a..."\n    VersionID: "3/L4kqtJlcpXroDTDmJ+rmDbwQaHWyOb..."\n'})}),"\n",(0,n.jsx)(s.h3,{id:"example-imperativecli",children:"Example (Imperative/CLI)"}),"\n",(0,n.jsx)(s.p,{children:"The Bacalhau command-line interface (CLI) provides an imperative approach to specify the S3 Publisher. Below are a few examples showcasing how to define an S3 publisher using CLI commands:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Basic Docker job writing to S3 with default configurations"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"bacalhau docker run -p s3://bucket/key ubuntu ...\n"})}),"\n",(0,n.jsx)(s.p,{children:"This command writes to the S3 bucket using default endpoint and region settings without compressing the result."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Docker job writing to S3 with a specific endpoint and region"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"bacalhau docker run -p s3://bucket/key,opt=endpoint=http://s3.example.com,opt=region=us-east-1 ubuntu ...\n"})}),"\n",(0,n.jsx)(s.p,{children:"This command specifies a unique endpoint and region for the S3 bucket."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Docker job writing a single archived file to S3"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"bacalhau docker run -p s3://bucket/key,opt=compress=true ubuntu ...\n"})}),"\n",(0,n.jsx)(s.p,{children:"This command compresses the result into a single archived file before writing it to the S3 bucket."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Using naming placeholders"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"bacalhau docker run -p s3://bucket/result-{date}-{jobID} ubuntu ...\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Dynamic naming placeholders like ",(0,n.jsx)(s.code,{children:"{date}"})," and ",(0,n.jsx)(s.code,{children:"{jobID}"})," allow for organized naming structures, automatically replacing these placeholders with appropriate values upon execution."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Remember to replace the placeholders like ",(0,n.jsx)(s.code,{children:"bucket"}),", ",(0,n.jsx)(s.code,{children:"key"}),", and other parameters with your specific values. These CLI commands offer a quick and customizable way to submit jobs and specify how the results should be published to S3."]}),"\n",(0,n.jsx)(s.h3,{id:"credential-requirements",children:"Credential Requirements"}),"\n",(0,n.jsx)(s.p,{children:"To support this storage provider, no extra dependencies are necessary. However, valid AWS credentials are essential to sign the requests. The storage provider employs the default credentials chain to retrieve credentials, primarily sourcing them from:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Environment variables"}),": AWS credentials can be specified using ",(0,n.jsx)(s.code,{children:"AWS_ACCESS_KEY_ID"})," and ",(0,n.jsx)(s.code,{children:"AWS_SECRET_ACCESS_KEY"})," environment variables."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Credentials file"}),": The credentials file typically located at ",(0,n.jsx)(s.code,{children:"~/.aws/credentials"})," can also be used to fetch the necessary AWS credentials."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"IAM Roles for Amazon EC2 Instances"}),": If you're running your tasks within an Amazon EC2 instance, IAM roles can be utilized to provide the necessary permissions and credentials."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["For a more detailed overview on AWS credential management and other ways to provide these credentials, please refer to the AWS official documentation on ",(0,n.jsx)(s.a,{href:"https://docs.aws.amazon.com/sdkref/latest/guide/standardized-credentials.html",children:"standardized credentials"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,s,i)=>{i.d(s,{Z:()=>o,a:()=>l});var n=i(7294);const t={},r=n.createContext(t);function l(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);